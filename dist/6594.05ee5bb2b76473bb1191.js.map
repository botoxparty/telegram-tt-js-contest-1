{"version":3,"file":"6594.05ee5bb2b76473bb1191.js","mappings":"0KACA,MCwDA,GAAeA,EAAAA,EAAAA,KAjCkBC,EAC/BC,QACAC,OACAC,YACAC,QAdoB,EAepBC,gBAEA,MAAMC,GAAOC,EAAAA,EAAAA,KAEPC,EAAyB,iBAATN,EAAoBA,EAAOO,EAAAA,EAAaP,GAExDQ,GAAqBC,EAAAA,EAAAA,KAAQ,IAC7BN,KACCJ,GAAOW,QAAUX,EAAMW,QAAUR,OAAtC,EACQ,KAAGH,EAAMW,OAASR,KACzB,CAACC,EAAWJ,EAAOG,IAEtB,OACES,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GAAeZ,ED1CT,YC2CjBa,MAAQ,YAAWR,OACnBS,IAAKX,EAAKY,MAAQ,MAAQ,OAEzBjB,GAAOkB,MAAM,EAAGf,GAAOgB,KAAKC,GAASR,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CAACpB,KAAMA,EAAMmB,KAAMA,EAAMlB,UD9CjC,eC+CpCO,GACCG,EAAAA,GAAAC,cAAA,OAAKX,UDhDiD,YCiDnDO,GAGD,G,yGCpDV,MCyEA,GAAeX,EAAAA,EAAAA,KAlDoBwB,EACjCC,YACAC,gBACAC,eACAvB,YACAwB,QACAC,aAGA,MAAMC,GAAMC,EAAAA,EAAAA,IAAuB,OAE7B,aAAEC,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7CT,OAAWU,GAAW,GAAMT,QAAwBS,OAAWA,EAdxC,KAgBnBC,GAAYC,EAAAA,EAAAA,GAAcV,GAAeK,OAAcG,EAjB3C,GAiBmEP,EAAOC,GAEtFS,GAAcC,EAAAA,EAAAA,IAAiBC,IACnC,IAAKV,EAAIW,QAAS,OAClB,MAAMC,EAAKZ,EAAIW,QACTE,EAAOH,EAAEI,cAAcC,wBACvBC,EAAIN,EAAEO,QAAUJ,EAAKK,KACrBC,EAAIT,EAAEU,QAAUP,EAAKQ,IACrBC,EAASN,EAAKH,EAAKf,MAAQ,EAC3ByB,EAASJ,EAAKN,EAAKd,OAAS,GAClCyB,EAAAA,EAAAA,KAAgB,KACdZ,EAAGa,aAAa,QAAU,oBAAmBH,yBAA8BC,MAAW,GACtF,IAGJ,GAAKrB,EAIL,OACElB,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GD1DM,WC0DsBiB,EAAsB7B,EAAWsB,GD1DA,YC2DxEI,IAAKA,EACL0B,QAAS9B,EAAgBY,OAAcH,GAEvCrB,EAAAA,GAAAC,cAAA,UACEe,IAAKM,EACLhC,UDhE2J,WCiE3JwB,MAAOA,EACPC,OAAQA,IAEVf,EAAAA,GAAAC,cAAA,OAAKX,UDpEoI,aCqErI,G,gKCjCV,MAgIA,GAAeJ,EAAAA,EAAAA,KAhIoByD,EACjCC,aAAY,EACZC,oBACAC,QACAC,OACAC,cAAc,WACdC,cAAc,OACdC,cACAC,mBACAC,mBACAC,gCAA+B,EAC/BC,YAAW,EACXC,aACAC,6BACAC,gBACAC,eAGA,MAAMC,GAAW1C,EAAAA,EAAAA,IAAyB,MACpCxB,GAAOC,EAAAA,EAAAA,MAEP,SAAEkE,IAAaC,EAAAA,EAAAA,OACdC,EAAUC,IAAeC,EAAAA,EAAAA,IAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,KAAS,GACrCG,EAAsBP,EAAW,IAAM,IAgE7C,OA9DAQ,EAAAA,EAAAA,KAAU,KACJhB,GACFW,EAAY,GACd,GACC,CAACX,KAEJiB,EAAAA,EAAAA,IAAW,KACJC,EAAAA,IACHX,EAAShC,QAAS4C,OACpB,GACCJ,IAEHC,EAAAA,EAAAA,KAAU,KACJtB,IACFN,EAAAA,EAAAA,KAAgB,KACdmB,EAAShC,QAAS4C,QAClBZ,EAAShC,QAAS6C,QAAQ,GAE9B,GACC,CAAC1B,IA4CF9C,EAAAA,GAAAC,cAAA,QAAMwE,OAAO,GAAGf,SAAUA,EAzB5B,SAAsBgB,GACpBA,EAAMC,iBAEF/B,GAIAqB,GACFP,EAAUI,EAEd,EAesDc,EAAAA,EAAWC,aAAa,OAC1E7E,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GAAe,6BAA8B4D,GAAY,UAAWhB,GAAS,SACxF1C,IAAKX,EAAKY,MAAQ,WAAQgB,GAEzBgC,GAhBHrD,EAAAA,GAAAC,cAAA,SACE6E,KAAK,WACLC,GAAG,mBACHF,aAAa,MACbvF,UAAU,kBACV0F,UAAW,IAYXhF,EAAAA,GAAAC,cAAA,SACEe,IAAK2C,EACLrE,UAAU,eACVwF,KAAMjC,EAAoB,OAAS,WACnCkC,GAAG,mBACHE,MAAOnB,GAAY,GACnBe,aAAcxB,EAA+B,gBAAkB,mBAC/D6B,SAvDR,SAA0BxD,GACpBoB,GACFS,IAGF,MAAM,OAAE4B,GAAWzD,EACnBqC,EAAYoB,EAAOF,OACnBf,EAAaiB,EAAOF,MAAMlF,QAAUqF,EAAAA,KAChC3B,GACFA,EAAc0B,EAAOF,MAEzB,EA6CQI,UAAW,IACXjF,IAAI,SAENJ,EAAAA,GAAAC,cAAA,aAAQ6C,GAASC,GAAQC,GACzBhD,EAAAA,GAAAC,cAAA,OACEX,UAAU,6BACVoD,QAjDR,WACEc,GAA4BX,EAC9B,EAgDQyC,KAAK,SACLN,SAAU,EACVO,MAAM,6BACN,aAAW,8BAEXvF,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAM5C,EAAoB,MAAQ,iBAG3CK,GAAelD,EAAAA,GAAAC,cAAA,KAAGX,UAAU,eAAe4D,GAC3CQ,IAAaO,GAAad,IACzBnD,EAAAA,GAAAC,cAACyF,EAAAA,EAAM,CAACrG,KAAK,UAAUyF,KAAK,SAASa,QAASrC,EAAUV,UAAWA,EAAWgD,UAAW3B,GACtFhB,GAGA,G,gKChKX,MCoIA,GAAe/D,EAAAA,EAAAA,KAAK2G,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQC,oBACjB,IAAKD,EACH,MAAO,CAAC,EAGV,MAAMvF,GAAOyF,EAAAA,EAAAA,KAAWH,EAAQC,GAC1BG,GAAOC,EAAAA,EAAAA,KAAWL,EAAQC,GAGhC,MAAO,CACLvF,OACA4F,iBAJuBJ,GAAiBE,GAAQA,EAAKG,OAKtD,GAbeR,EArFHS,EACfC,OACAhB,QACAiB,cACAC,WACAC,wBACAC,WACAnG,OACAoG,WACAC,aACAvH,YACA8G,kBACAU,iBACAC,kBACArE,UACAsE,oBAEA,MAAMvH,GAAOC,EAAAA,EAAAA,KAEPuH,EAAUL,GAAYpG,EACtB0G,EAAUL,GAAcI,EAExBE,EAAOF,IAAWG,EAAAA,EAAAA,IAAcH,GAAWA,OAAU5F,EAE3D,IAAIgG,EACAC,EACAC,EAEAhB,GAAQhB,GACV8B,EACErH,EAAAA,GAAAC,cAAA,OAAKX,UD7EiL,YC8EpLU,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAMc,EAAMpG,MD9EoL,cCkF1MmH,EAAe/B,GACN2B,IACTG,EACErH,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CACLnB,UDtF2J,WCuF3JkB,KAAM0G,EACN7H,KAAK,QACL+G,gBAAiBA,IAIrBmB,GAAYC,EAAAA,EAAAA,KAAa/H,EAAMyH,IAAY3B,EAC3C+B,EAAe/B,GACbvF,EAAAA,GAAAC,cAACwH,EAAAA,EAAa,CAACjH,KAAM0G,EAASd,gBAAiBA,EAAiBW,gBAAiBA,KAIrF,MAAMW,GAAgBxH,EAAAA,EAAAA,GDnGD,YCqGlBiH,GAAMQ,SAAWd,GAAYe,iBDrGwN,WCsGtPpB,GDtG0C,WCuG1CC,GDvGiE,WCwGjEC,GDxGiH,YCyGhHhE,GDzG0I,WC0G3IoE,IAAkBe,EAAAA,EAAAA,GAAkBhB,GAAcrG,GAClDlB,GAGF,OACEU,EAAAA,GAAAC,cAAA,OACEX,UAAWoI,EACXhF,QAASA,IAAMA,IAAUiE,GACzBpB,MAAOiB,EAAce,OAAYlG,EACjCjB,IAAKX,EAAKY,MAAQ,WAAQgB,GAEzBgG,GACCb,GACAxG,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GDvHwM,WCuH5K8G,GAAgB5G,IAAI,QAC7DkH,GAGJb,GACCzG,EAAAA,GAAAC,cAAA,OAAKX,UD5H4E,YC6H/EU,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAK,WAGX,I,yGChIV,QAA2f,WAA3f,EAA8gB,WC+H9gB,GAAevG,EAAAA,EAAAA,KArGuB4I,EACpCC,WACAC,YACAC,oBACAC,oBACAC,WACAC,YACA9I,gBAEA,MAAMG,GAAOC,EAAAA,EAAAA,KAEP2I,GAAmBpH,EAAAA,EAAAA,IAAuB,MAE1CqH,GAAqBrH,EAAAA,EAAAA,IAAuB,OAE3CqB,EAAQiG,IAAavE,EAAAA,EAAAA,IAAS,IAC9BwE,EAAcC,IAAmBzE,EAAAA,EAAAA,IAAS,GAE3C0E,EAAsBA,KAC1B,GAAIL,EAAiB1G,SAAW2G,EAAmB3G,cAAwBN,IAAb8G,EAAwB,CACpF,MAAMQ,EAAaN,EAAiB1G,QAAQiH,YACtCC,EAAcP,EAAmB3G,QAAQiH,YACzCE,EAAWH,EAAa,EACxBI,EAAWF,EAAcF,EAAa,EACtCK,EAAeb,EAAWU,EAC1BI,EAAYC,KAAKC,IAAIL,EAAUI,KAAKE,IAAIJ,EAAcD,IAI5D,IAAIM,EAFJd,EAAUU,EAAYJ,GAIpBQ,EADEL,EAAeF,EACEX,EAAWU,GAA2B,EAAXC,GACrCE,EAAeD,EAEN,IADMZ,EAAYY,EAAWF,IAAiB,EAAIE,EAAWF,GACrC,GAExB,GAEpBJ,EAAgBY,EAClB,IAGFjF,EAAAA,EAAAA,IAAUsE,EAAqB,CAACP,KAEhCmB,EAAAA,EAAAA,GAAkBhB,EAAoBI,GAEtC,MAAMa,EAAmBC,QAAQtB,GAAqBD,GAChDwB,EAAiBD,QAAQrB,IAAaA,EAAW,IAEvD,OACEnI,EAAAA,GAAAC,cAAA,OACEe,IAAKsH,EACLhJ,WAAWY,EAAAA,EAAAA,GD9EM,WCgFfqJ,GDhFsC,WCiFtCnB,GDjF2kB,WCkF3kB9I,GAEFa,OAAOuJ,EAAAA,EAAAA,QACQrI,IAAb8G,GAA2B,eAAcA,SACxB9G,IAAjBmH,GAA+B,oBAAmBA,IACjD,cAAalG,MAGfiH,GACCvJ,EAAAA,GAAAC,cAAA,OAAKX,UD3F6D,YC4FhEU,EAAAA,GAAAC,cAAA,OAAKX,UD5F4K,YC6F/KU,EAAAA,GAAAC,cAAA,OAAKX,UD7F8Q,WC6F7O0B,IAAKqH,GACxCH,GAAqBlI,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAMyC,EAAmB5I,UD9FoW,aC+FxZ2I,GACCjI,EAAAA,GAAAC,cAAA,OAAKX,UDhGod,WCgG9ac,IAAKX,EAAKY,MAAQ,WAAQgB,GAClE4G,IAIPjI,EAAAA,GAAAC,cAAA,OAAKX,UDrGsV,YCsGzVU,EAAAA,GAAAC,cAAA,OAAKa,MAAM,KAAKC,OAAO,KAAK4I,QAAQ,YAAYC,KAAK,QACnD5J,EAAAA,GAAAC,cAAA,QAAM4J,EAAE,uTAAuTD,KAAK,gBAM9U5J,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,GACd9J,EAAAA,GAAAC,cAAA,YAAO8H,IAET/H,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,GACd9J,EAAAA,GAAAC,cAAA,YAAO+H,IAEThI,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GDnH8gB,WCmH9euJ,GDnHwgB,aCoHtjBzJ,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,GACd9J,EAAAA,GAAAC,cAAA,YAAO8H,IAET/H,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,GACd9J,EAAAA,GAAAC,cAAA,YAAO+H,KAGP,G,8FC3HV,SAAgB,KAAO,WAAW,KAAO,YCWnC+B,EAAS,CACbC,IAAK,CAAC,CAAC,UAAW,WAAY,CAAC,UAAW,YAC1CC,KAAM,CAAC,CAAC,UAAW,WAAY,CAAC,UAAW,aAIvCC,EAAa,IAAIC,IAAIC,OAAOC,KAAKN,IA0CvC,GAAe7K,EAAAA,EAAAA,KAAK2G,EAAAA,EAAAA,KACjBC,IACQ,CACLwE,OAAOC,EAAAA,EAAAA,KAAYzE,MAHLD,EA9BD2E,EACjBC,OAAMC,QAAOpL,YAAWgL,YAExB,MACMK,EAAoB,QADTC,EAAAA,EAAAA,OAGXC,EAAWX,EAAWY,IAAIJ,GAAqBA,OAAoBrJ,EAInE0J,EAAgBF,EAAWd,EAAOc,GAFV,SAAVP,EAE4C,EAAI,QAAKjJ,EACnE2J,EAAaD,EAAgBA,EAAc,GAAKL,EAChDO,EAAWF,EAAgBA,EAAc,GAAKL,EAEpD,OACE1K,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GAAe4J,EAAOoB,KAAM5L,IAC1CU,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,EAAOqB,OAAQrK,MAAM,KAAKC,OAAO,KAAK4I,QAAQ,YAAYC,KAAK,QAC7E5J,EAAAA,GAAAC,cAAA,QAAM4J,EAAE,kPAAkPD,KAAO,QAAOe,OACxQ3K,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,kBAAgB8E,GAAI4F,EAAkBS,GAAG,UAAUC,GAAG,IAAIC,GAAG,UAAUC,GAAG,KAAKC,cAAc,kBAC3FxL,EAAAA,GAAAC,cAAA,QAAM,aAAY+K,IAClBhL,EAAAA,GAAAC,cAAA,QAAMwL,OAAO,IAAI,aAAYR,OAInCjL,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,EAAOW,MAAOA,GAC1B,I,kBCtCH,SAASiB,EAAmBC,GACjC,MAAkB,aAAdA,EAAK7G,KACA6G,EAAKC,QAGPD,EAAKE,WAAWC,MAAMC,GAA0D,UAAdA,EAAKjH,QAAmB8G,OACnG,CAEO,SAASI,EAAyBL,GACvC,MAAkB,aAAdA,EAAK7G,KACA6G,EAAKM,kBAGPN,EAAKO,UACd,CAQO,SAASC,EAAkBR,GAChC,GAAkB,mBAAdA,EAAK7G,KAET,OAGK,SAAmC+G,GACxC,MAAMO,EAAQP,EAAWC,MAAMC,GAA0D,UAAdA,EAAKjH,OAC1EuH,EAAWR,EAAWC,MAAMC,GAA6D,aAAdA,EAAKjH,OAChFwH,EAAUT,EAAWC,MAAMC,GAA4D,YAAdA,EAAKjH,OAKpF,MAAO,CACLsH,QACAG,gBANsBV,EAAWC,MAAMC,GACzB,oBAAdA,EAAKjH,OAMLwH,UACAD,WAEJ,CAjBSG,CAA0Bb,EAAKE,WACxC,C,2GCvCA,MAAMY,EAAyB,IACzBC,EAAuB,IAEd,SAASC,EACtBC,EACAC,GAA2B,EAC3BC,EACAC,GAGA,MAAMjH,GAASkH,EAAAA,EAAAA,MAEf,OAAOC,EAAAA,EAAAA,IAAQL,GAAU7H,IACvB,GAAIA,IAAOgI,EACT,OAAOG,IAGT,MAAM/F,GAAOgG,EAAAA,EAAAA,KAAWrH,EAAQf,GAChC,IAAKoC,EACH,OAAO,EAGT,IAAIiG,EAAW,EAEf,MAAMC,GAAcC,EAAAA,EAAAA,KAAsBxH,EAAQf,GAalD,OAZIsI,IACFD,GAAYC,EAAYE,MAGtBV,GAA4B1F,EAAKqG,aACnCJ,GAAYX,GAGVK,GAAeA,EAAYW,SAAS1I,KACtCqI,EAAWM,KAAKC,MAAQjB,GAAwBI,EAAY/M,OAAS+M,EAAYc,QAAQ7I,KAGpFqI,CAAQ,GACd,OACL,C,+SCuCA,MAKMS,EAAkB,iBAkUxB,GAAe3O,EAAAA,EAAAA,KAhUI4O,EACjBxO,YACAyO,aACAC,UACAC,yBACAC,cACAC,oBACAC,eACAC,gBACArH,gBACApE,YACA0L,kBACAC,eACAC,2BACAxI,gBACAyI,aACAC,gBACAC,aACAC,gBACAC,oBACAC,qBACAC,iBACAC,kBACAC,gBACGC,MAEH,MAAMzP,GAAOC,EAAAA,EAAAA,KAEPyP,EAAgBD,EAAcC,cAC9BC,EAAoBD,EAAgBD,EAAcE,uBAAoB/N,EACtEgO,EAAsBF,EAAgBD,EAAcG,yBAAsBhO,EAC1EiO,GAAqBxP,EAAAA,EAAAA,KAAQ,IAC7BqP,EACKD,EAAcI,mBAGhBJ,EAAcK,iBAAmB,CAACL,EAAcK,kBAAoBC,EAAAA,GAC1E,CAACL,EAAeD,EAAcK,iBAAkBL,EAAcI,qBAE3DG,IAAc3P,EAAAA,EAAAA,KAAQ,IACtBqP,EACKD,EAAcO,YAGhBP,EAAcQ,WAAa,CAACR,EAAcQ,YAAcF,EAAAA,GAC9D,CAACL,EAAeD,EAAcQ,WAAYR,EAAcO,cAGrD9L,IAAW1C,EAAAA,EAAAA,IAAyB,MACpC0O,GAAiBF,GAAY1P,OAtDd,IAwDrBqE,EAAAA,EAAAA,KAAU,KACR,IAAKmK,EAAc,OACnB,MAAMqB,EAAYC,OAAOC,YAAW,MAClCC,EAAAA,EAAAA,KAAe,KACbpM,GAAShC,SAAS4C,OAAO,GACzB,GA/De,KAkEnB,MAAO,KACLsL,OAAOG,aAAaJ,EAAU,CAC/B,GACA,CAACrB,IAEJ,MAAM0B,IAAuBnQ,EAAAA,EAAAA,KAAQ,IAAM,IAAIqK,IAAIiF,IAAoB,CAACA,IAClEc,IAAyBpQ,EAAAA,EAAAA,KAAQ,IAAM,IAAIqK,IAAIkF,IAAsB,CAACA,IAEtEc,IAAsBrQ,EAAAA,EAAAA,KAAQ,IAC3B2P,GAAYW,QAAQrL,IAAQkL,GAAqBnF,IAAI/F,MAC3D,CAACkL,GAAsBR,KAEpBY,IAAmBvQ,EAAAA,EAAAA,KAAQ,IAC1BiO,GACEuC,EAAAA,EAAAA,IAAqBvC,EAAY,QADhB,CAAC,GAExB,CAACA,IAEEwC,IAAgBzQ,EAAAA,EAAAA,KAAQ,KAC5B,GAAIoO,EACF,OAAOF,EAGT,MAAMwC,EAAiC,GACjCC,EAA2B,GAC3BC,EAAqC,GAY3C,OAVA1C,EAAQ2C,SAAS5L,IACXkL,GAAqBnF,IAAI/F,GAC3ByL,EAAqBI,KAAK7L,GACjBmL,GAAuBpF,IAAI/F,GACpC2L,EAAyBE,KAAK7L,GAE9B0L,EAAeG,KAAK7L,EACtB,IAGKyL,EAAqBK,OAAOJ,EAAgBC,EAAyB,GAC3E,CAACxC,EAAaF,EAASiC,GAAsBC,KAE1CY,IAAkBrP,EAAAA,EAAAA,IAAiBsD,IACvC,GAAIkL,GAAqBnF,IAAI/F,GAC3BiK,IAAkBjK,GAAI,QAIxB,GAAImL,GAAuBpF,IAAI/F,GAC7BiK,IAAkBjK,GAAI,OADxB,CAKA,GAAIoK,GAAiBkB,GAAiBtL,GAAK,CACzC,MAAMgM,EAAeV,GAAiBtL,GAAID,KACpCkM,EAAwB1B,GAAoBhP,SAAW,GAQ7D,OAPI0Q,EAAsBvD,SAASsD,GACjCC,EAAsBC,OAAOD,EAAsBpD,QAAQmD,GAAe,GAE1EC,EAAsBJ,KAAKG,QAE7B7B,EAAcgC,6BAA6BF,EAG7C,CAEA,GAAI7B,EAAe,CACjB,MAAMgC,EAAiB1B,GAAYnP,QAQnC,OAPI6Q,EAAe1D,SAAS1I,GAC1BoM,EAAeF,OAAOE,EAAevD,QAAQ7I,GAAK,GAElDoM,EAAeP,KAAK7L,QAEtBmK,EAAckC,sBAAsBD,EAGtC,CAEId,GAAiBtL,GACnBmK,EAAcmC,2BAA2BhB,GAAiBtL,GAAID,MAIhEoK,EAAcoC,qBAAqBvM,EAhCnC,CAgCsC,IAGlCwM,IAAqB9P,EAAAA,EAAAA,IAAiBC,IAC1C,MAAM,MAAEuD,GAAUvD,EAAEI,cACpBiN,IAAiB9J,EAAM,KAGlBuM,GAAaC,KAAWC,EAAAA,EAAAA,GAC7BzC,EAAYsB,GAAe/G,QAAQ0E,IAG/ByD,IAAaC,EAAAA,EAAAA,KAAY,CAAC7M,EAAY8M,KAC1C,MAAM/L,GAASkH,EAAAA,EAAAA,MACT8E,EAAWD,EAAaxB,GAAiBtL,QAAM1D,EAC/Cb,EAAQqR,OAAsCxQ,GAAzB4E,EAAAA,EAAAA,KAAWH,EAAQf,GAExCgN,EAAiBvR,GAAQsR,EAC/B,IAAKC,EACH,OAAIC,EAAAA,IAAchS,EAAAA,GAAAC,cAAA,OAAKgS,IAAKlN,GAAI,+BAA6BA,QAC7D,EAGF,MAAMsB,EAAS7F,KAAS4G,EAAAA,EAAAA,IAAc5G,GAASA,EAAK6F,SAAWL,OAAiB3E,EAE1E6Q,EAAqBhC,GAAuBpF,IAAI/F,GAChDoN,EAAmBlC,GAAqBnF,IAAI/F,GAC5CqN,EAAWF,GAAsBC,EACjCE,EAAYP,EAAWxC,GAAoB7B,SAASqE,EAAShN,MAAQ2K,GAAYhC,SAAS1I,IA4CzFuN,EAAUC,GA/BjB,WACE,GAAIL,EAAoB,MAAO,CAAC1D,GAChC,GAAKhO,EAAL,CAEA,GAAIqO,EAAmB,CACrB,MAAM2D,EAAWhS,EAAKiS,YAAY,IAAID,SACtC,GAAIA,EACF,MAAO,CAAE,IAAGA,IAEhB,CAEA,GAAI7D,EAAY,CACd,IAAIvH,EAAAA,EAAAA,IAAc5G,GAChB,MAAO,EAACkS,EAAAA,EAAAA,KAAejT,EAAMe,IAG/B,MAAMmS,GAAaC,EAAAA,EAAAA,KAAiB9M,EAAQtF,EAAKuE,IACjD,MAAO,EACL8N,EAAAA,EAAAA,KAAcpT,EAAMe,EAAMmS,IAC1BzS,EAAAA,EAAAA,IAAe4S,EAAAA,EAAAA,KAAatS,EAAMmS,GAAY,IAAS7I,EAAAA,EAAOiJ,cAElE,CAEA,GAAInE,EAAe,CACjB,MAAMoE,GAAUC,EAAAA,EAAAA,IAAezS,GAC/B,OAAOwS,GAAW,CAACvT,EAAKuT,GAC1B,CAxB2B,CA2B7B,CAEsCE,IAAiB,GAEvD,OACElT,EAAAA,GAAAC,cAACkT,EAAAA,EAAU,CACTlB,IAAKlN,EACLzF,WAAWY,EAAAA,EAAAA,GAAe2N,EAAiB7G,GAC3CzB,MAAOvF,EAAAA,GAAAC,cAACwH,EAAAA,EAAa,CAACjH,KAAMuR,IAC5BqB,cACEpT,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CACLD,KAAMA,GAAQsR,EACd1L,gBAAiBC,EACjBhH,KAAK,WAGTiT,SAAUA,EACVC,kBAAmBA,EACnB3M,SAAUwM,EACViB,SAAU5E,EACV9I,QAAM,EACN2N,aA5DElB,EAAiBpS,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAK,eACV,UAAlBiJ,EACK1O,EAAAA,GAAAC,cAACsT,EAAAA,EAAK,CAACC,QAASnB,EAAWzM,SAAUwM,EAAUqB,WAAS,IAE3C,aAAlB/E,EACK1O,EAAAA,GAAAC,cAACyT,EAAAA,EAAQ,CAACF,QAASnB,EAAWzM,SAAUwM,EAAUqB,WAAS,SADpE,EAyDEE,cAAc,MAEdjR,QAASA,IAAMoO,GAAgB/L,GAE/BiK,gBAAiBA,GAAmB,KAAOA,EAAgBjK,EAAIoN,KAC/D,GAEH,CACD9B,GAAkBrK,EAAeyI,EAAYzH,EAAe0H,EAAejP,EAAMwQ,GACjFC,GAAwB1B,EAA0BQ,EAAiBM,EAAoBG,GACvFb,EAAeD,EAAYE,IAGvB+E,IAAiB9T,EAAAA,EAAAA,KAAQ,KAC7B,GAAKiO,GAAYhO,OACjB,OACEC,EAAAA,GAAAC,cAAA,OAAKgS,IAAI,cACNhE,GAA0BjO,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,EAAAA,EAAO+J,qBAAsBpU,EAAKwO,IAC5EF,GAAYxN,KAAKuR,GAAaH,GAAWG,EAAShN,MAAM,KACzD9E,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,EAAAA,EAAO+J,qBAAsBpU,EAAK,gBAC9C,GAEP,CAACsO,EAAYE,EAAwBxO,EAAMkS,KAE9C,OACE3R,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GAAe4J,EAAAA,EAAOgK,UAAWxU,IAC9CiP,GACCvO,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GAAe4J,EAAAA,EAAOiK,OAAQ,iBAAkB3T,IAAKX,EAAKY,MAAQ,WAAQgB,GACvFiO,GAAoB/O,KAAKuR,GACxB9R,EAAAA,GAAAC,cAACqG,EAAAA,EAAQ,CACPhH,UAAWwK,EAAAA,EAAOkK,SAClBnN,WAAYwJ,GAAiByB,GAC7BpP,QAASoO,GACTnK,SAAUmL,EACVrL,UAAQ,MAGX2I,GAAmB7O,KAAI,CAACwE,EAAIkP,IAC3BjU,EAAAA,GAAAC,cAACqG,EAAAA,EAAQ,CACPhH,UAAWwK,EAAAA,EAAOkK,SAClBjO,OAAQhB,EACRyB,YAAamJ,IAAkBsE,EAAIxE,GAAY1P,OApR7B,EAqRlBiG,cAAeA,EACftD,QAASoO,GACTnK,SAAU5B,MAGboL,GAAoB5P,KAAI,CAACwE,EAAIkP,IAC5BjU,EAAAA,GAAAC,cAACqG,EAAAA,EAAQ,CACPhH,UAAWwK,EAAAA,EAAOkK,SAClBjO,OAAQhB,EACRyB,YACEmJ,IAAkBsE,GAAK7E,GAAmBrP,QAAU,GAAK0P,GAAY1P,OA/RrD,EAiSlB0G,UAAQ,EACR/D,QAASoO,GACTnK,SAAU5B,MAGd/E,EAAAA,GAAAC,cAACiU,EAAAA,EAAS,CACRnP,GAAIsJ,EACJrN,IAAK2C,GACLsB,MAAOiJ,EACPhJ,SAAUqM,GACVvO,YAAamL,GAAqB1O,EAAK,iBAK5C+R,IAAazR,OACZC,EAAAA,GAAAC,cAACkU,EAAAA,EAAc,CACb7U,WAAWY,EAAAA,EAAAA,GAAe4J,EAAAA,EAAOsK,WAAYtF,GAAsBhF,EAAAA,EAAOuK,OAAQ,iBAClFC,MAAO9C,GACP+C,aAAe,IAAG1G,IAClB+F,eAAgBA,GAChB3E,WAAYwC,GACZnD,gBAAiBA,GAEhBkD,GAAYjR,KAAKwE,GAAO4M,GAAW5M,MAEnCnC,IAAa4O,IAAgBA,GAAYzR,OAG5CC,EAAAA,GAAAC,cAACuU,EAAAA,EAAO,MAFRxU,EAAAA,GAAAC,cAAA,KAAGX,UAAWwK,EAAAA,EAAO2K,WAAYrG,GAAgB,yBAI/C,G,yGCrZV,MCyGA,EA7EmB+E,EACjB5N,QACA+M,WACAc,gBACAE,eACAK,gBAAgB,QAChB/N,WACAyN,WACA1N,SACArG,YACAoV,iBACAnC,oBACApS,QACAuC,UACAsM,sBAEA,MAAMvP,GAAOC,EAAAA,EAAAA,KAEPiV,GAAetB,IAAazN,EAC5BpE,GAAcC,EAAAA,EAAAA,IAAgB,KAC9B4R,IAEAzN,EACFoJ,MAIFtM,MAAW,IAGb,OACE1C,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GD5DM,WC8DfoS,GD9D2K,WC+D3K1M,GD/DmF,WCgEnF+O,GDhEsC,WCiEtCvB,GDjEoJ,WCkEpJ9T,GAEFoD,QAASlB,EACTrB,MAAOA,EACPC,IAAKX,EAAKY,MAAQ,WAAQgB,EAC1BiE,KAAMqP,EAAc,cAAWtT,EAE/B2D,SAAU2P,EAAc,OAAItT,IAE1BuE,IAAayN,GAAY1N,GAAU3F,EAAAA,GAAAC,cAAC2U,EAAAA,EAAY,MACjDtB,GACCtT,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GD7E8K,WC+E1K,QAAlByT,ED/E0O,WAAtB,aCkFnNL,GAGJF,GACCpT,EAAAA,GAAAC,cAAA,OAAKX,UDtFkQ,YCuFpQ8T,GAGLpT,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GD1FwF,WC0F3DwU,IAC1CnP,GAEF+M,GACCtS,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GD9F4G,WC8F5EqS,IAC7CD,IAGHgB,GAAgBuB,EAAAA,IAChB7U,EAAAA,GAAAC,cAAA,OAAKX,UDnGwD,aCqG3D,C,qJCrGV,MC0LA,GAAeJ,EAAAA,EAAAA,KAvJiB4V,EAC9BC,mBACAC,eACAC,cACAC,oBACA5V,gBAGA,MAAM6V,GAAelU,EAAAA,EAAAA,IAAuB,MAEtCK,GAAYL,EAAAA,EAAAA,IAA0B,OAErCmU,EAAkBC,IAAoBC,EAAAA,EAAAA,IAAU,CAAExU,MAAO,EAAGC,OAAQ,IAErEwU,GAAMC,EAAAA,EAAAA,MAELC,EAAYC,IAAiB1R,EAAAA,EAAAA,MAE9B2R,EAAmBV,IAAeW,EAAAA,EAAAA,KAAoBX,EAAa,WACnEY,GAAaC,EAAAA,EAAAA,GAASH,IAE5BvR,EAAAA,EAAAA,KAAU,KACHyR,IACLE,EAAAA,EAAAA,IAAaF,GAAYG,KAAKN,EAAc,GAC3C,CAACG,IAEJ,MAAMI,GAAmBnW,EAAAA,EAAAA,KAAQ,KAC/B,MAAMoW,EAA8D,GACpE,IAAK,IAAIC,EAAO,EAAGA,GArCT,EAqCwBA,IAAQ,CACxC,MAAMC,EAAgBlN,KAAKmN,MArCJ,GAqCkC,EApCxC,IAoC6CF,EAAO,KAC/DG,EAAeH,EAvCb,EAwCFI,EArCa,KACN,GADM,KAqCqDD,EAElEE,EAAaL,EAAO,GAAM,EAAIjN,KAAKuN,GAAKL,EAAgB,EAE9D,IAAK,IAAInC,EAAI,EAAGA,EAAImC,EAAenC,IAAK,CACtC,MAAMyC,EAASzC,EAAImC,EAAiBlN,KAAKuN,GAAK,EAAID,EAElD,GAAItB,GAAqBwB,EAAkB,IAAVxN,KAAKuN,IAAaC,EAAkB,IAAVxN,KAAKuN,GAC9D,SAIF,MAGMzU,EAAI,GAHmB,KAAbuU,EAAoBrN,KAAKyN,IAAID,GAIvCvU,EAAI,GAHMoU,EAAarN,KAAK0N,IAAIF,GAKhCG,EAAa,IAAMP,EAAepN,KAAK4N,SAE7CZ,EAAYtF,KAAK,CACf5O,IAAGG,IAAG0U,cAEV,CACF,CACA,OAAOX,CAAW,GACjB,CAAChB,KAEJ5L,EAAAA,EAAAA,GAAkB6L,GAAe4B,IAC/B1B,EAAiB,CACfvU,MAAOiW,EAAMC,YAAYlW,MACzBC,OAAQgW,EAAMC,YAAYjW,QAC1B,KAGJqD,EAAAA,EAAAA,KAAU,KACR,MAAM0P,EAAYqB,EAAaxT,QAC3BmS,GACFuB,EAAiB,CACfvU,MAAOgT,EAAUmD,YACjBlW,OAAQ+S,EAAUoD,cAEtB,GACC,CAAC7B,IAEJ,MAAM8B,GAAO1V,EAAAA,EAAAA,IAAgB,KAC3B,MAAM2V,EAAS9V,EAAUK,QACzB,IAAKyV,IAAW3B,EAAY,OAC5B,MAAM4B,EAAMD,EAAOE,WAAW,OACxB,MAAExW,EAAK,OAAEC,GAAWqW,EAC1B,IAAKtW,IAAUC,EAAQ,OAEvBsW,EAAIE,OACJtB,EAAiBtF,SAAQ,EACvB3O,IAAGG,IAAG0U,iBAEN,MAAMW,GAAe1W,EAAQoI,KAAKC,IAAIrI,EAzF3B,IAyF6CyU,IAAQ,EAC1DkC,EAAUzV,EAAIkH,KAAKC,IAAIrI,EA1FlB,IA0FoCyU,GAAOiC,EAChDE,EAAUvV,EAAI+G,KAAKC,IAAIpI,EA3FlB,IA2FqCwU,GAAOiC,EAEjDnY,EA/FW,GA+FakW,EAAMsB,GAAcW,EAAc,GAAM,GAEtEH,EAAIM,UAAUlC,EAAYgC,EAAUpY,EAAO,EAAGqY,EAAUrY,EAAO,EAAGA,EAAMA,EAAK,IAE/EgY,EAAIO,UAEA5C,IACFqC,EAAIE,OACJF,EAAIQ,UAAY7C,EAChBqC,EAAIS,yBAA2B,cAC/BT,EAAIU,SAAS,EAAG,EAAGjX,EAAOC,GAC1BsW,EAAIO,WAGN,MAAMI,EAAiBX,EAAIY,qBAAqBnX,EAAQ,EAAGC,EAAS,EAAG,EAAGD,EAAQ,EAAGC,EAAS,EAAGD,EAAQ,GACzGkX,EAAeE,aAAa,EAAG,aAC/BF,EAAeE,aAAa,EAAG,WAG/Bb,EAAIE,OACJF,EAAIS,yBAA2B,kBAC/BT,EAAIQ,UAAYG,EAChBX,EAAIU,SAAS,EAAG,EAAGjX,EAAOC,GAC1BsW,EAAIO,SAAS,IAuBf,OApBAxT,EAAAA,EAAAA,KAAU,KACR+S,GAAM,GACL,CAAC1B,KAEJrR,EAAAA,EAAAA,KAAU,KACR,MAAM,MAAEtD,EAAK,OAAEC,GAAWqU,IACpBgC,EAAS9V,EAAUK,QACzB,IAAKb,IAAUC,EACb,OAGF,MAAMoX,EAAUjP,KAAKC,IAAIrI,EAAOC,IAChCyB,EAAAA,EAAAA,KAAgB,KACd4U,EAAOtW,MAAQqX,EAAU5C,EACzB6B,EAAOrW,OAASoX,EAAU5C,EAE1B4B,GAAM,GACN,GACD,CAAC/B,EAAkBG,IAGpBvV,EAAAA,GAAAC,cAAA,OACEe,IAAKmU,EACL7V,WAAWY,EAAAA,EAAAA,GD/KM,WC+KsBZ,GACvCa,OAAOuJ,EAAAA,EAAAA,GACJ,YAAWqL,EAAiB,KAC5B,YAAWA,EAAiB,IAAMA,EAAiB,OAGtD/U,EAAAA,GAAAC,cAAA,UAAQX,UDrL6B,WCqLH0B,IAAKM,IACnC,G,oHCtLV,QAA6C,WCgF7C,GAAepC,EAAAA,EAAAA,KAvDyBkZ,EACtCC,WACAC,WACAhZ,YACAiZ,eACAC,cAEA,MAAMC,GAAcC,EAAAA,EAAAA,KAAmBL,EAASM,YAAY,GAEtDC,GAAmB9C,EAAAA,EAAAA,GAAUwC,OAAyBjX,EAAdoX,GAExCI,GAAkB/Y,EAAAA,EAAAA,KAAQ,IACzBgZ,EAAAA,GACEC,MAAMC,KAAK,CAAEjZ,OAfF,IAe2BQ,KAAI,IA4CrD,SAAgCgY,EAAe,IAC7C,MAAMvW,GAAKuW,EAAe,EAAIrP,KAAK4N,SAAWyB,EAAe,IAAMrP,KAAK4N,SAAW,GAAM,GAAK,GACxF3U,EAAIoW,EAAerP,KAAK4N,SAAWyB,EAAe,EAExD,MAAQ,eAAcvW,MAAMG,EAAIoW,KAAgBvW,KAAKG,GACvD,CAjD2D8W,CAAuBV,KADxC,IAErC,CAACA,IAEJ,GAAKK,GAAqBN,EAI1B,OACEtY,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GD/CM,WC+CsBZ,GACvCa,OAAOuJ,EAAAA,EAAAA,GAAWF,QAAQ+O,IAAkB,oBAAmBA,QAE9DM,EAAMtY,KAAI,CAAC2Y,EAAMjF,KAChB,MAAM9T,EAAS,wBAAuB+Y,OACtC,OAAIZ,EAEAtY,EAAAA,GAAAC,cAACkZ,EAAAA,EAAW,CACVR,WAAYN,EAASM,WACrBrZ,UAAWwK,EACX3J,MAAOA,EACPiZ,qBAAmB,EACnB/Z,KAAMkZ,EACNc,eAAsB,IAANpF,EAAUuE,OAAUnX,IAMxCrB,EAAAA,GAAAC,cAAA,OACEqZ,IAAKV,EACLW,IAAI,GACJja,UAAWwK,EACX3J,MAAOA,EACPqZ,WAAW,EACXH,eAAsB,IAANpF,EAAUuE,OAAUnX,GACpC,IAGF,G,4OCzBV,MAAMoY,EAAY,IAAMC,EAAAA,EAElBC,EAAc,IAAMD,EAAAA,EAEpBE,EAAoBF,EAAAA,EAiK1B,GAAexa,EAAAA,EAAAA,KAAK2G,EAAAA,EAAAA,KAClB,CAACC,GAAU+T,kBACT,MAAM,oBAAEC,EAAmB,UAAEC,GAAcjU,GACrC,gBAAEkU,IAAoBC,EAAAA,EAAAA,KAAenU,GAErCoU,GAAcC,EAAAA,EAAAA,KAA+BrU,EAAQ,mBAE3D,MAAO,CACLkU,gBAAiBA,IAAkBH,GACnCO,mBAAoBL,EAAUK,mBAC9BC,eAAgBP,EAChBI,cACD,GAZerU,EA/JUyU,EAC5BT,cACAxB,WACA/Y,YACAD,OAAOoa,EACPc,aAAaZ,EACbK,kBACAI,qBACAC,iBACAH,cACAM,iBACAC,cACAC,aACAC,YACAC,0BAEA,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MAGzB9Z,GAAMC,EAAAA,EAAAA,IAAuB,MAE7B8Z,EAA6B,WAAlB1C,EAASvT,KAEpBkW,GAAoBlb,EAAAA,EAAAA,KAAQ,IAChCsa,GAAoBtO,MAAMmP,IAAMC,EAAAA,EAAAA,KAAeD,EAAE5C,SAAUA,MAC1D,CAAC+B,EAAoB/B,IAClB8C,EAAeH,GAAmBI,YAAYrW,IAE9C,YAAEsW,IAAgBC,EAAAA,EAAAA,GAAeP,EAAW1C,EAASM,gBAAatX,GAElEka,GAAmBzb,EAAAA,EAAAA,KAAQ,KAC/B,IAAKib,EAAU,OAAOC,GAAmBQ,iBAAiBzW,GAE1D,IAAKsW,EAAa,OAClB,MAAMI,EAAarB,GAAoBtO,MAAM4P,GAAcA,EAAUrD,SAASsD,WAAaN,EAAYO,SACnGJ,iBAAiBzW,GACrB,OAAO0W,CAAU,GAChB,CAACT,EAAmBZ,EAAoBiB,EAAaN,IAElDc,GAAW/b,EAAAA,EAAAA,KAAQ,KACvB,GAAIyb,EACF,OAAOA,EAGT,IAAKlB,GAAgByB,SACnB,OAGF,MAAM,SAAEA,GAAazB,EAGrB,OAAOyB,EAFa5S,KAAKmN,MAAMnN,KAAK4N,SAAWgF,EAAS/b,SAE3BgF,EAAE,GAC9B,CAACwW,EAAkBlB,IAEhB0B,GAAiBC,EAAAA,EAAAA,IAAkBhb,EAAK4Z,GAExCqB,EAAsBd,IAAgBzC,EAAAA,EAAAA,KAAmByC,GACzDe,EAAkBL,IAAYnD,EAAAA,EAAAA,KAAmBmD,GAEjDM,GAAsBrG,EAAAA,EAAAA,GAASmG,GAC/BG,GAAkBtG,EAAAA,EAAAA,GAASoG,GAE3BG,GAAiBvc,EAAAA,EAAAA,KAAQ,IAC7Bka,GAAiBlO,MAAMwQ,IAAWpB,EAAAA,EAAAA,KAAeoB,EAAQjE,MACxD,CAAC2B,EAAiB3B,IAEfkE,EAAmB/S,QACvB0Q,GAAemC,IAAmBtB,GAAYoB,IAAwBC,GAElEI,EAAmBT,IAAoBQ,IAAqB/B,GAAmBE,IAEnFxZ,aAAcub,EACdtb,qBAAsBub,IACpBtb,EAAAA,EAAAA,GAA4Bmb,OAAkBlb,GAAW,EAAM,SAEjEH,aAAcyb,EACdxb,qBAAsByb,IACpBxb,EAAAA,EAAAA,GAA4Bob,OAAkBnb,GAAW,EAAM,QAE7Dwb,GAAcpb,EAAAA,EAAAA,IAAgB,KAClCoZ,EAAmB,CAAEhB,cAAaxB,YAAW,KAGxCyE,GAAmBC,GAAqBC,KAAyBC,EAAAA,EAAAA,KAClEC,KAAoBnC,GAAcyB,GAAqBM,KAE3D5b,aAAcic,GACdhc,qBAAsBic,KACpBhc,EAAAA,EAAAA,GAA4B8b,QAAkB7b,GAAW,GAEvDgc,IAAgBnd,EAAAA,EAAAA,GACpB4J,EAAAA,EAAOoB,KACPuR,GAAsB3S,EAAAA,EAAOwT,UAC7B9C,GAAkB1Q,EAAAA,EAAO0Q,eACzBlb,GAGF,OACEU,EAAAA,GAAAC,cAAA,OAAKX,UAAW+d,GAAerc,IAAKA,IAChCwZ,GAAkB2C,IAClBnd,EAAAA,GAAAC,cAACsd,EAAAA,EAAmB,CAClBje,UAAW8d,GACX/E,SAAUA,EACV+B,mBAAoBA,EACpB/a,KAAMA,EACNub,oBAAqBA,KAGvBJ,GAAkBO,GAClB/a,EAAAA,GAAAC,cAACkZ,EAAAA,EAAW,CACVR,WAAYN,EAASM,WACrBrZ,UAAWwK,EAAAA,EAAOuR,YAClBhc,KAAMA,EACNme,OAAQ/C,EACRgD,iBAAe,EACf9C,UAAWA,EACX+C,8BAA+B9C,EAC/B+C,aAAW,IAGdhB,IAAuB5B,GACtB/a,EAAAA,GAAAC,cAAC2d,EAAAA,EAAe,CACd3L,IAAM,GAAEkJ,KAAgB9b,IACxBC,WAAWY,EAAAA,EAAAA,GAAe4J,EAAAA,EAAO+T,aAAcjB,GAC/Cvd,MAAMye,EAAAA,EAAAA,IAjIe,IAiIIze,GACzB0e,OAAQ5B,EACR6B,KAAMjC,IAAmBtB,EACzBwD,QAASvD,EACTwD,OAAQnB,GACRvE,QAASwE,GACTW,aAAW,IAGdlB,GACCzc,EAAAA,GAAAC,cAAAD,EAAAA,GAAAme,SAAA,KACEne,EAAAA,GAAAC,cAAC2d,EAAAA,EAAe,CACd3L,IAAM,GAAE4J,KAAYtB,IACpBjb,WAAWY,EAAAA,EAAAA,GAAe4J,EAAAA,EAAOsU,OAAQ1B,GACzCrd,KAAMkb,EACNwD,OAAQ3B,EACR4B,KAAMjC,EACNkC,QAAM,EACNzF,QAASqE,EACTc,aAAW,IAEZ5C,IAAaQ,GAAoBQ,GAChC/b,EAAAA,GAAAC,cAACmY,EAAAA,EAAiB,CAChBC,SAAUA,EACV/Y,UAAWod,EACXnE,aAAcrP,KAAKC,IAxJM,GAwJF9J,EAAuCua,GAC9DpB,QAASqE,KAKb,I,+HCzLV,MAqDA,GAAe3d,EAAAA,EAAAA,KArD2Bqe,EACxClF,WACA+B,qBACA9a,YACAD,OACAgf,gBACAzD,0BAEA,MAAMI,GAAoBlb,EAAAA,EAAAA,KAAQ,IAChCsa,GAAoBtO,MAAM4P,IAAcR,EAAAA,EAAAA,KAAeQ,EAAUrD,SAAUA,MAC1E,CAAC+B,EAAoB/B,IAClBiG,EAAetD,GAAmBuD,YAAYxZ,GAC9CyZ,EAAYF,EAAgB,WAAUA,SAAiBjd,EACvDod,GAAY3I,EAAAA,EAAAA,GAAS0I,GAErBrd,GAAuBud,EAAAA,EAAAA,GAA6BD,GAEpDE,EAAuC,UAAlBtG,EAASvT,MAA0C,OAAtBuT,EAASsD,SAC3DiD,EAA6BP,GAAmC,UAAlBhG,EAASvT,MAA0C,MAAtBuT,EAASsD,SAE1F,MAAsB,WAAlBtD,EAASvT,KAET9E,EAAAA,GAAAC,cAACkZ,EAAAA,EAAW,CACVR,WAAYN,EAASM,WACrBrZ,WAAWY,EAAAA,EAAAA,GAAe,sBAAuBZ,GACjDD,KAAMA,EACNqe,8BAA+B9C,IAKjCgE,EAEA5e,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAK,QAAQnG,UAAU,sBAAsBa,MAAQ,cAAad,eAAkBA,QAK5FW,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GACT,sBACAye,GAAsB,mBACtBxd,EACA7B,GAEFa,MAAOd,EAAQ,UAASA,gBAAmBA,WAAWgC,EACtDiY,IAAKmF,GAAaI,EAClBtF,IAAKyB,GAAmBzV,MACxBiU,WAAW,GACX,G,iZCnDN,MAqGA,GAAeta,EAAAA,EAAAA,KArGoC4f,EACjDC,UACAC,oBAEA,MAAM,gBACJC,EAAe,mBAAEC,EAAkB,iBAAEC,IACnCrE,EAAAA,EAAAA,OAEE,WAAEsE,GAAeL,EAEjBtf,GAAOC,EAAAA,EAAAA,MACN2f,EAAeC,IAAoBtb,EAAAA,EAAAA,OACnCub,EAAkBC,EAAgBC,IAAmBxC,EAAAA,EAAAA,IAAQ,GAC9DyC,EAAQX,EAAQY,QAAQlb,OAAQib,MAChCE,GAAoB9J,EAAAA,EAAAA,IAAS+J,EAAAA,EAAAA,KAAkBH,EAAO,SACtDI,GAAoBhK,EAAAA,EAAAA,IAASiK,EAAAA,EAAAA,KAA8BL,IAC3DM,EAAUjB,EAAQY,QAAQlb,OAAQib,OAAOM,QAEzCC,GAAyBxe,EAAAA,EAAAA,IAAgB,KAC7C0d,EAAiB,CACf5Z,MAAO9F,EAAK,wBACZsf,QAAStf,EAAK,mBACdgF,OAAQ,CACNA,OAAQ,4BACRyb,QAAS,CACPC,OAAQC,EAAAA,GAAgBC,OAG5BC,WAAY7gB,EAAK,SACjB,IAGE8gB,GAA2B9e,EAAAA,EAAAA,IAAiB+e,IAChDlB,OAAiBje,GACjB6d,EAAmB,CAAEsB,SACrBP,GAAwB,IAGpBQ,GAAuBhf,EAAAA,EAAAA,IAAgB,KAC3C6d,OAAiBje,EAAU,IAGvBqf,GAAiBjf,EAAAA,EAAAA,IAAgBkf,UACrC,IAAKb,EAAmB,OAExBL,IACAQ,IAGA,MAAMW,QAAaC,EAAAA,EAAAA,IAAUf,GAC7BZ,EAAmB,CACjBsB,KAAM,IAAIM,KAAK,CAACF,GAAO,cACvBZ,SAAS,EACTe,QAASrB,EAAMsB,YAAYlV,MAAMmV,QAAyB5f,IAAnB4f,EAAEC,gBAA6BA,cACtE,IAoBJ,OACElhB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,kCAAkC0F,SAAU,EAAGM,KAAK,SAAS5C,QAlB7Cie,WAC3BvB,GAAcQ,EACbI,EACFR,IAEAF,QAAuBuB,EAAAA,EAAAA,IAAUjB,IAGnCX,EAAgB,CACdkC,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,GACnBsc,SAAUC,EAAAA,GACVC,OAAQC,EAAAA,GAAkBC,iBAE9B,GAKEzhB,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CACLif,MAAOX,EAAQY,QAAQlb,OAAQib,MAC/BgC,kBAAgB,EAChBC,UAAW3B,EACX3gB,KAAK,UAEPW,EAAAA,GAAAC,cAAA,YAAO+e,KAEPhf,EAAAA,GAAAC,cAAA,QAAMX,UAAU,yBAAyBG,EAAKugB,EAAU,kBAAoB,oBAC5EhgB,EAAAA,GAAAC,cAAC2hB,EAAAA,EAAS,CACRpB,KAAMnB,EACNwC,QAASpB,EACTvb,SAAUqb,IAEZvgB,EAAAA,GAAAC,cAAC6hB,EAAAA,EAAa,CACZC,OAAQxC,EACRha,MAAO9F,EAAK,kBACZuiB,eAAgBtB,EAChBmB,QAASpC,EACTwC,UAAWjD,MAER,ICjEX,GAAe9f,EAAAA,EAAAA,KAxCkCgjB,EAC/CnD,UACAC,oBAEA,MAAM,gBACJC,IACEnE,EAAAA,EAAAA,MAEErb,GAAOC,EAAAA,EAAAA,KAWb,OACEM,EAAAA,GAAAC,cAAAD,EAAAA,GAAAme,SAAA,KACEne,EAAAA,GAAAC,cAAA,YAAO+e,KACPhf,EAAAA,GAAAC,cAAA,QACEX,UAAU,gCACV0F,SAAU,EACVM,KAAK,SACL5C,QAhB0Byf,KAC9BlD,EAAgB,CACdkC,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,GACnBsc,SAAUC,EAAAA,GACVC,OAAQC,EAAAA,GAAkBC,iBAC1B,EAWE,aAAYhiB,EAAK,oBAEjBO,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CACLif,MAAOX,EAAQY,QAAQlb,OAAQib,MAC/BgC,kBAAgB,EAChBC,WAAS,EACTtiB,KAAK,WAGR,I,2GCrDP,QAAkN,WAAlN,EAAwhB,WAAxhB,EAAylB,WAAzlB,EAA4mB,WAA5mB,EAAiqB,WAAjqB,EAAstB,WAAttB,EAAuwB,WAAvwB,GAAm0B,WC8Ln0B,SAAS+iB,IAAe,QAAEC,IACxB,MAAM,SAAEC,IAAaxH,EAAAA,EAAAA,MACfpQ,ECxLR,SAAyBlK,EAAe+hB,EAAgB,aACtD,MAAO7X,EAAO8X,IAAYxe,EAAAA,EAAAA,IAASue,GAC7BE,GAAa3M,EAAAA,EAAAA,IAAS4M,EAAAA,EAAAA,KAAkBliB,IAAO,EAAOmiB,EAAAA,GAAeC,SAa3E,OAXAxe,EAAAA,EAAAA,KAAU,KACR,WACE,IAAKqe,EACH,OAGF,MAAMI,QAAqBC,EAAAA,EAAAA,IAAgBL,GAC3CD,EAAU,KAAGO,EAAAA,EAAAA,IAAQF,KACtB,EAPD,EAOI,GACH,CAACJ,IAEG/X,CACT,CDwKgBsY,CAAgBX,EAlKJ,aAoK1B,OACEriB,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,EAAapH,QAASA,IAAM4f,EAAS,CAAEvd,GAAIsd,EAAQtd,MACjE/E,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CAACnB,UAAWwK,EAAemI,IAAKoQ,EAAQtd,GAAI1F,KAAK,QAAQmB,KAAM6hB,IACtEriB,EAAAA,GAAAC,cAAA,OAAKE,MAAQ,eAAcuK,IAASpL,UAAWwK,GAC7C9J,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAK,cAAcnG,UAAWwK,IACpC9J,EAAAA,GAAAC,cAAA,QAAMX,UAAWwK,IAAsBmZ,EAAAA,EAAAA,IAAqBZ,GAASa,cAAgB,KAGvFljB,EAAAA,GAAAC,cAAA,QAAMX,UAAWwK,GAAsBuY,EAAQ9c,OAGrD,CAEA,SAAS4d,IAAa,QACpBd,EAAO,OACPlB,EAAM,cACNiC,EAAa,qBACbC,IAOA,MAAM,iBAAEC,EAAgB,iBAAEC,IAAqBzI,EAAAA,EAAAA,MACzCrb,GAAOC,EAAAA,EAAAA,KAYb,OACEM,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GAAe4J,EDzOqiB,YC0O/jBpH,QAASA,KAZP2gB,EACFE,EAAiB,CACfxe,GAAIoc,EAAQqC,sBAAsB,EAAMC,WAAY,kBAAmBC,uBAAuB,IAGhGJ,GAOiC,GAEjCtjB,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CAACnB,UAAWwK,EAAemI,IAAKoQ,EAAQtd,GAAI1F,KAAK,QAAQmB,KAAM6hB,IACtEriB,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,GACd9J,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,MAElB9J,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GAAe4J,EDhPw1B,aCiPr3B9J,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,MAElB9J,EAAAA,GAAAC,cAAA,OAAKX,UAAWwK,GACd9J,EAAAA,GAAAC,cAAA,QAAMX,UAAWwK,GAAuB,IAAGsZ,MACzCC,GAAwBrjB,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAK,aAAanG,UAAWwK,KAE/D9J,EAAAA,GAAAC,cAAA,QAAMX,UAAWwK,GAAsBrK,EAAK,gBAGlD,CAEA,UAAeP,EAAAA,EAAAA,KACb2G,EAAAA,EAAAA,KAAqB,CAACC,GAAUqb,aAC9B,MAAM,kBAAEwC,EAAiB,WAAEC,EAAU,MAAEC,IAAUC,EAAAA,EAAAA,KAAwBhe,EAAQqb,IAAW,CAAC,EACvFkC,GAAuBU,EAAAA,EAAAA,KAA2Bje,GAClDke,GAAeC,EAAAA,EAAAA,KAAmBne,EAAQqb,GAEhD,MAAO,CACLwC,oBACAC,aACAC,QACAR,uBACAa,gBAAiBF,GAAcG,SAChC,GAXHte,EA7MsBue,EACtBjD,SACAwC,oBACAC,aACAC,QACAR,uBACAa,sBAEA,MAAMzkB,GAAOC,EAAAA,EAAAA,MACP,6BAAE2kB,EAA4B,2BAAEC,IAA+BxJ,EAAAA,EAAAA,OAC9DyJ,EAAWC,EAAaC,IAAkBxH,EAAAA,EAAAA,IAAQ,IAClDyH,EAAUC,EAAYC,IAAiB3H,EAAAA,EAAAA,IAAQ,GAEhDjc,GAAMC,EAAAA,EAAAA,IAAuB,MAC7B4jB,GAAkB/kB,EAAAA,EAAAA,KAAQ,KAC9B,IAAK6jB,EACH,OAGF,MAAM7d,GAASkH,EAAAA,EAAAA,MACf,OAAO2W,EAAkBpjB,KAAKwE,IAAOoI,EAAAA,EAAAA,KAAWrH,EAAQf,KAAKqL,OAAO5G,QAAQ,GAC3E,CAACma,KAEGmB,EAAsBC,IAA2B/gB,EAAAA,EAAAA,KAAS,GAC3DghB,GAAuBllB,EAAAA,EAAAA,KAAQ,IAAM+kB,GAAiBvkB,MAAM,EAzCvC,KAyCiE,CAACukB,IACvFI,EAA4Bzb,QAAQwb,GAAsBjlB,QAG1DmlB,EAAuB1b,SAC1Bsb,IACKlB,GAHYc,GAAYH,IAIzBU,IAGPE,EAAAA,EAAAA,GAAoBnkB,GAAMkkB,GAAsB,IAEhD9gB,EAAAA,EAAAA,KAAU,KACHuf,GACHW,EAA2B,CAAEnD,UAC/B,GACC,CAACA,EAAQwC,KAEZtf,EAAAA,EAAAA,IAAW,IAAM0gB,GAAwB,IAzDhB,MA2DzB3gB,EAAAA,EAAAA,KAAU,KACR,GAAI0gB,GAAwBD,GAAmBjB,EAAY,CACzD,MAAM7e,EAAK+K,YAAW,KACpBiV,GAAwB,EAAM,GA/DX,KAkErB,MAAO,IAAM/U,aAAajL,EAC5B,CAEgB,GACf,CAAC8f,EAAiBjB,EAAYkB,IAEjC,MAAMM,GAAe3jB,EAAAA,EAAAA,IAAgB,KACnC4iB,EAA6B,CAAElD,WAC3ByC,GACFa,IACAE,MAEAH,IACAI,IACAG,GAAyBpB,GAC3B,IAUF,OAPAvf,EAAAA,EAAAA,KAAU,KACH8f,GAAiBmB,aAAczB,IAChC0B,EAAAA,EAAAA,MAAkBpB,EAAgBmB,YApFjB,IAqFnBD,GACF,GACC,CAAClB,EAAiBN,IAGnB5jB,EAAAA,GAAAC,cAAA,OAAKX,WAAWY,EAAAA,EAAAA,GD5HG,aC6HjBF,EAAAA,GAAAC,cAAA,OAAKX,UAAU,aACbU,EAAAA,GAAAC,cAAA,QACEX,WAAWY,EAAAA,EAAAA,GAAe+kB,GD/HkG,YCgI5HviB,QAASuiB,EAA4BG,OAAe/jB,GAEnD5B,EAAK,mBAGTqlB,GAAwB9kB,EAAAA,GAAAC,cAACslB,EAAAA,EAAQ,CAACjmB,UDrI+L,aCsIjO4lB,GACCllB,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GACTqkB,GDzIkS,WC0IlSG,GD1IwY,aC6I1Y1kB,EAAAA,GAAAC,cAAA,OAAKX,UD7I2B,YC8I9BU,EAAAA,GAAAC,cAAA,OACEa,MAAM,KACNC,OAAO,IACP4I,QAAQ,WACRC,KAAK,OACL4b,MAAM,8BAENxlB,EAAAA,GAAAC,cAAA,QACEX,UDtJyE,WCuJzE,YAAU,UACV,YAAU,UACVuK,EAAE,uOACFD,KAAK,YAIX5J,EAAAA,GAAAC,cAAA,OAAKX,UD9J4O,YC+J/OU,EAAAA,GAAAC,cAAA,OAAKX,UD/JyI,YCgK5IU,EAAAA,GAAAC,cAAA,QAAMX,UDhKyJ,YCgK/HG,EAAK,oBACrCO,EAAAA,GAAAC,cAACyF,EAAAA,EAAM,CACLpG,UDlKgL,WCmKhLoL,MAAM,cACNhI,QAAS0iB,GAETplB,EAAAA,GAAAC,cAACuF,EAAAA,EAAI,CAACC,KAAK,YAGfzF,EAAAA,GAAAC,cAAA,OAAKe,IAAKA,EAAK1B,WAAWY,EAAAA,EAAAA,GDzKge,WCyK7b,iBAC1D8kB,GAAsBzkB,KAAI,CAAC8hB,EAASpO,IACtBwR,IAANxR,EACLjU,EAAAA,GAAAC,cAACkjB,GAAY,CACXd,QAASA,EACTlB,OAAQA,EACRiC,cAAeS,EAhJN,GAgJsC,EAC/CR,qBAAsBA,IAGxBrjB,EAAAA,GAAAC,cAACmiB,GAAc,CAACC,QAASA,SAOjC,KEgiBV,IAAenjB,EAAAA,EAAAA,KAAK2G,EAAAA,EAAAA,KAClB,CAACC,GAAUiZ,UAASsC,eAClB,MAAM,OACJF,EAAM,SAAEuE,EAAQ,QAAE/F,GAChBZ,GAEE,cAAE4G,EAAa,aAAEC,GAAiBjG,EAAQlb,QAAU,CAAC,EACrDohB,GAAkBC,EAAAA,EAAAA,GAAoB/G,IAAUgH,aAChDC,EAAgBH,GAClBI,EAAAA,EAAAA,KAAkBngB,EAAQqb,EAAQ0E,QAClCxkB,EAEEiJ,GAAQC,EAAAA,EAAAA,KAAYzE,IACpB,aACJkP,GACElP,EAAOogB,SAASC,OAAO7b,IAAU,CAAC,EAEhC8b,IAAY/E,IAAWgF,EAAAA,EAAAA,KAAuBvgB,EAAQiZ,EAASsC,IAEnEiF,UAAWC,EACXC,YAAaC,GACVL,IAAanM,EAAAA,EAAAA,KAAenU,GAAQ4gB,gBAAmB,CAAC,EAEvDC,GAAaxgB,EAAAA,EAAAA,KAAWL,EAAQ4f,GAAYvE,GAC5CyF,GAAazZ,EAAAA,EAAAA,KAAWrH,EAAQqb,GAEhC0F,EAAajB,GAAezY,EAAAA,EAAAA,KAAWrH,EAAQ8f,QAAgBvkB,EAE/DylB,EAAenH,EAAQlb,QAAQsiB,OAC/BC,GAAqBC,EAAAA,EAAAA,KAA6BnhB,EAAQghB,GAE1DI,EAAYvH,EAAQlb,QAAQ0iB,MAKlC,MAAO,CACLR,aACAC,aACAC,aACAjB,eACAD,gBACAK,gBACAI,YACAY,qBACAI,kBAbuBC,EAAAA,EAAAA,KAA0BvhB,EAAQohB,GAczDI,OAZYC,EAAAA,EAAAA,KAAuBzhB,EAAQiZ,GAa3C/J,eACAwS,uBAAuBC,EAAAA,EAAAA,KAA4B3hB,MAC/CsgB,GAAa,CACfG,iBACAE,oBAEFpD,sBAAsBU,EAAAA,EAAAA,KAA2Bje,GACjDiH,cAAejH,EAAOiH,cACvB,GAvDelH,EAznB6B6hB,EAC/C3I,UACAsC,WACAsG,aACAC,kBAAkB,EAClBC,cACAC,eACAnB,aACAC,aACAjB,gBACAK,gBACAJ,eACAiB,aACAT,YACAG,iBACAE,mBACAO,qBACAI,mBACAW,gBACAT,QACAU,uBACAR,wBACAxS,eACAiT,gCACAC,gCACAxK,gCACAyK,4BACApb,iBACAsW,4BAEA,MAAM,iBACJC,GAAgB,gBAChB8E,GAAe,cACfC,GAAa,WACbC,GAAU,6BACVC,GAA4B,sCAC5BC,KACE1N,EAAAA,EAAAA,MAEE2N,IAAU/oB,EAAAA,EAAAA,KACVD,IAAOipB,EAAAA,EAAAA,KAGP1nB,IAAMC,EAAAA,EAAAA,IAAuB,OAEnC0nB,EAAAA,EAAAA,IAAe3nB,GAAKinB,IACpBW,EAAAA,EAAAA,GACE7J,EAAQoC,OACoB,YAA5BpC,EAAQ8J,WAAW/jB,KAAqBia,EAAQ8J,UAAU9C,kBAAe1kB,EACzE2kB,IAEF8C,EAAAA,EAAAA,GAAgB,CACdC,WAAY/nB,GACZmgB,OAAQpC,EAAQoC,OAChBiF,YACAG,iBACAE,mBACAoB,iBAGFmB,EAAAA,EAAAA,KAAkB,KACZjK,EAAQkK,UACVd,KAA2B,CAAEe,0BAA2B,CAACnK,EAAQha,KACnE,IAGF,MAAMokB,GAAwBvB,GAAmB,GAC1CwB,GAASC,KAAapM,EAAAA,EAAAA,GAAQkM,IAC/BG,GAAiD,gBAAjCvK,EAAQY,QAAQlb,QAAQK,KACxCykB,GAA8C,aAAjCxK,EAAQY,QAAQlb,QAAQK,KACrC0kB,GAAqD,wBAAjCzK,EAAQY,QAAQlb,QAAQK,MAAkCia,EAAQY,QAAQlb,OAAQib,MACtG+J,GAAmD,uBAAjC1K,EAAQY,QAAQlb,QAAQK,MAAiCia,EAAQY,QAAQlb,OAAQib,MACnGgK,IAAkBC,EAAAA,EAAAA,KAAuB5K,GACzC6K,GAA+C,cAAjC7K,EAAQY,QAAQlb,QAAQK,KACtC+kB,GAA8C,aAAjC9K,EAAQY,QAAQlb,QAAQK,KACrCglB,GAAoD,mBAAjC/K,EAAQY,QAAQlb,QAAQK,KAC3CilB,GAAgD,eAAjChL,EAAQY,QAAQlb,QAAQK,KAEvCklB,GAAuBxgB,QAAQuV,EAAQkL,sBAAwBlL,GAAShF,YAE9EmQ,EAAAA,EAAAA,GAAyBlpB,GAAK8mB,IAE9B1jB,EAAAA,EAAAA,KAAU,KACJ+kB,IAIJrZ,WAAWuZ,GA1FU,GA0FCzB,EAAmC,GACxD,CAACA,EAAiByB,GAAWF,KAEhC,MAAMxoB,IAAYqb,EAAAA,EAAAA,IAAkBhb,GAAK0c,GAEnCyM,IAAwBlpB,EAAAA,EAAAA,IAAO,MACnC,MAAMmpB,EAAWpC,GAAsBrmB,SAAWod,EAAQha,IAAMijB,EAAqBrmB,QACrF,OAAO2nB,KAAkBvK,EAAQK,YAAcgL,CAChD,EAHoC,KAKrChmB,EAAAA,EAAAA,KAAU,KACJzD,IAAawpB,GAAsBxoB,UACrCwoB,GAAsBxoB,SAAU,EAChCymB,GAAgB,CAAEiC,WAAW,IAC/B,GACC,CAAC1pB,GAAWynB,KAEf,MAAM,qBAAEjnB,KAAyBC,EAAAA,EAAAA,GAA4BgoB,QAAS/nB,EAAW8nB,IAAuB,GAGlGmB,IAAYtd,EAAAA,EAAAA,MAAYud,MAAMC,KAC9BC,IAAc3qB,EAAAA,EAAAA,KAAQ,IACnB6lB,EACHA,EAAcplB,KAAKmqB,GAAWJ,KAAYI,KAASta,OAAO5G,cAC1DnI,GACH,CAACskB,EAAe2E,KAEbtL,IAAgBpN,EAAAA,EAAAA,KAAY,KACzB+Y,EAAAA,EAAAA,GACLlC,GACA1J,EACA4H,EACAC,EACA6D,GACAzE,EACAJ,EACA0B,EACA,CAAEK,cACFO,EACAxK,IAED,CACDiK,EAAY5I,EAASmJ,EAA+BxK,EAA+B+K,GACnF7B,EAAYD,EAAYf,EAAcI,EAAeyE,GAAanD,KAG9D,kBACJsD,GAAiB,kBAAEC,GAAiB,wBACpCC,GAAuB,kBAAEC,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBlqB,IACrBmqB,QAA2C9pB,IAAtBwpB,GAOrBO,GAAsBA,KAC1B,MAAMC,EAAWtM,EAAQY,QAAQlb,QAAQ4mB,SACpCA,GAEL9C,GAA6B,CAC3BpH,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,IACnB,EAGEumB,GAAyBA,KAC7BhI,GAAiB,CACfiI,QAAQ,EACRC,WAAY7E,GAAY5hB,GACxB0mB,SAAU9F,IAAgB,GAC1B+F,aAAc3M,EAAQY,QAAQlb,QAAQsiB,QAAU,GAChD,EAGE4E,GAAwBA,KAC5BnD,GAAsC,CACpCrH,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,IACnB,EAGE6mB,GAAsBA,KAC1B,MAAMC,EAAO9M,EAAQY,QAAQlb,QAAQonB,KAChCA,GACLxD,GAAc,CAAEwD,OAAM9M,QAAS,CAAEoC,OAAQpC,EAAQoC,OAAQC,UAAWrC,EAAQha,KAAO,EAcrF,GADyBgjB,GAAkD,0BAAjChJ,EAAQY,QAAQlb,QAAQgG,KAEhE,OAAOzK,EAAAA,GAAAC,cAAA,QAAMe,IAAKA,KAGpB,GAAI2mB,EACF,OAAO3nB,EAAAA,GAAAC,cAAA,QAAMe,IAAKA,GAAK1B,UAAU,2BAA2B0f,MA0H9D,SAAS8M,KACP,MAAMT,EAAWtM,EAAQY,QAAQlb,QAAQ4mB,SACzC,IAAKA,EAAU,OACf,MAAM,OAAEU,EAAM,OAAEhmB,GAAWslB,EAErBW,EAAWD,GAAS9lB,EAAAA,EAAAA,MAAW+G,EAAAA,EAAAA,MAAa+e,QAAU1qB,EACtD4qB,EAAalmB,GACfE,EAAAA,EAAAA,MAAW+G,EAAAA,EAAAA,MAAajH,GACN,mBAAlBslB,EAASvmB,MAA8Bia,EAAQK,gBAChC/d,EAAbwlB,EAEN,OAAIoF,GAAcA,EAAWlnB,KAAOgI,GAEhC/M,EAAAA,GAAAC,cAAA,OAAKX,UAAU,+BACbU,EAAAA,GAAAC,cAAA,YAAM,IAAER,GAAK,UAAU,KACJ,aAAlB4rB,EAASvmB,MACR9E,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CAACnB,UAAU,6BAA6BD,KAAK,QAAQmB,KAAMyrB,IAEpEjsB,EAAAA,GAAAC,cAAA,YAAM,KAAEuH,EAAAA,EAAAA,KAAa/H,GAAMwsB,GAAY,MAM3CjsB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,+BACbU,EAAAA,GAAAC,cAAA,YAAM,IAAER,GAAK,YAAY,KACN,aAAlB4rB,EAASvmB,MACR9E,EAAAA,GAAAC,cAACQ,EAAAA,EAAM,CAACnB,UAAU,6BAA6BD,KAAK,QAAQmB,KAAMwrB,GAAYrF,IAEhF3mB,EAAAA,GAAAC,cAAA,YAAM,KAAEuH,EAAAA,EAAAA,KAAa/H,GAAMusB,GAAYrF,GAAa,KAG1D,CAoOA,MAAMrnB,IAAYY,EAAAA,EAAAA,GAChB,kCACAkmB,IAAcK,GAAoB,WACjC6C,IAAiBE,IAAqBC,KAAoB,kBAC3D0B,IAAsB,gBACtBrD,GAAgB,eAChB3mB,IAGF,OACEnB,EAAAA,GAAAC,cAAA,OACEe,IAAKA,GACL+D,IAAImnB,EAAAA,EAAAA,KAAiBnN,EAAQha,IAC7BzF,UAAWA,GACX,kBAAiByf,EAAQha,GACzB,iBAAgBga,EAAQkK,eAAY5nB,EACpC8qB,YAncqBzqB,KACvB0qB,EAAAA,EAAAA,GAAwB1qB,GACxBopB,GAAwBppB,EAAE,EAkcxB2qB,cAAetB,KAEbvB,KAAsBD,KAAeG,KAAoBD,IACzDzpB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,yBAAyBoD,QAla3BlB,KACmB,YAAjCud,EAAQY,QAAQlb,QAAQK,MAC1BwjB,GAAW,CACTnH,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,IAEvB,GA4ZoEia,MAEjEsK,IAjZL,WACE,MAAMgD,EAAcvN,EAAQY,QAAQlb,QAAQsa,QAC5C,OACE/e,EAAAA,GAAAC,cAAA,QACEX,UAAU,sBACV0F,SAAU,EACVM,KAAK,SACL5C,QAAS4oB,IAETtrB,EAAAA,GAAAC,cAACssB,EAAAA,EAAuB,CACtBta,IAAK8M,EAAQha,GACb6G,QAASob,EACThJ,KAAMwJ,EACNvJ,QAAM,EACNuO,gBAAc,IAEhBxsB,EAAAA,GAAAC,cAAA,cAASwoB,GAAQ,2BACjBzoB,EAAAA,GAAAC,cAAA,YACGwoB,GAAQ,4BAA6BA,GAAQ,SAAU1J,EAAQY,QAAQlb,QAAQsiB,OAAQ,OAEzFuF,GACCtsB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,iCACZmtB,EAAAA,EAAAA,GAAuB,CAAEhiB,KAAM6hB,EAAY7hB,KAAMiiB,SAAUJ,EAAYI,YAI5E1sB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,yBACdU,EAAAA,GAAAC,cAAC0sB,EAAAA,EAAQ,CAACC,OAAO,WAChBnE,GAAQ,0BAIjB,CAiXsBoE,GACjBtD,IAhXL,WACE,MAAMuD,EAAiB/N,EAAQY,QAAQlb,QAAQsoB,WACzCC,EAAcjO,EAAQY,QAAQlb,QAAQuoB,YACtCV,EAAcvN,EAAQY,QAAQlb,QAAQsa,QAC5C,OACE/e,EAAAA,GAAAC,cAAA,QACEX,UAAU,8CACV0F,SAAU,EACVM,KAAK,SACL5C,QAASkpB,IAET5rB,EAAAA,GAAAC,cAACssB,EAAAA,EAAuB,CACtBta,IAAK8M,EAAQha,GACb6G,QAASob,EACThJ,KAAMwJ,EACNvJ,QAAM,EACNuO,gBAAc,IAEhBxsB,EAAAA,GAAAC,cAAA,cACGwoB,GAAQuE,EAAc,yBAA2B,4BAEpDhtB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,2BACbunB,IAAcoG,EAAAA,EAAAA,GACbxE,GACEqE,EAAiB,2BAA6BE,EAC1C,4BAA8B,iCAClCE,EAAAA,EAAAA,KAAazE,GAAS5B,IAExB,CAAC,qBAGL7mB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,4BACb2tB,EAAAA,EAAAA,GAAWxE,GACV,iCACAA,GAAQ,SAAU1J,EAAQY,QAAQlb,QAAQsiB,OAAQ,MACjD,CAAC,qBAGLuF,GACCtsB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,iCACZmtB,EAAAA,EAAAA,GAAuB,CAAEhiB,KAAM6hB,EAAY7hB,KAAMiiB,SAAUJ,EAAYI,YAI5E1sB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,yBACbmpB,GAAQ,gCAIjB,CA+TmB0E,GACdvD,IA5TD5pB,EAAAA,GAAAC,cAAA,QACEX,UAAU,8CACV0F,SAAU,EACVM,KAAK,SACL5C,QAAS0oB,IAETprB,EAAAA,GAAAC,cAACssB,EAAAA,EAAuB,CACtBta,IAAK8M,EAAQha,GACb6G,QAASwb,EACTpJ,KAAMwJ,EACNvJ,QAAM,EACNuO,gBAAc,IAEhBxsB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,iCACZ8tB,EAAAA,EAAAA,IAAcrO,EAAQY,QAAQlb,OAAQ0iB,OACvCnnB,EAAAA,GAAAC,cAAA,cAASwoB,GAAQ,WAEnBzoB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,kCACb2tB,EAAAA,EAAAA,GACCxE,GAAS1J,EAAQK,WACkB,0BAA/B,8BAA0D8N,EAAAA,EAAAA,KAAazE,GAAS5B,IACpF,CAAC,qBAGL7mB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,yBACdU,EAAAA,GAAAC,cAAC0sB,EAAAA,EAAQ,CAACC,OAAO,WAChBnE,GAAQ,2BAmSZoB,IAzLL,WACE,MAAMwB,EAAWtM,EAAQY,QAAQlb,QAAQ4mB,SACzC,GAAKA,GAAmC,aAAvBA,EAAS1f,KAAK7G,KAE/B,OACE9E,EAAAA,GAAAC,cAAA,QACEX,UAAU,8CACV0F,SAAU,EACVM,KAAK,SACL5C,QAAS0oB,IAGTprB,EAAAA,GAAAC,cAACssB,EAAAA,EAAuB,CACtB3gB,QAASyf,EAAS1f,KAAKC,QACvBoS,KAAMwJ,EACNvJ,QAAM,EACNuO,gBAAc,EACdntB,KAlbqB,MAqbtBysB,KACD9rB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,gCAvFrB,WACE,MAAM+rB,EAAWtM,EAAQY,QAAQlb,QAAQ4mB,SACnCgC,EAAkBxG,IAAcrf,EAAAA,EAAAA,KAAa/H,GAAMonB,GACnDyG,EAAkBjC,GAAUtM,QAClC,IAAKsM,EAAU,OAEf,GAAIiC,EACF,OAAOb,EAAAA,EAAAA,GAAuB,CAAEhiB,KAAM6iB,EAAgB7iB,KAAMiiB,SAAUY,EAAgBZ,WAExF,MAAMa,EAAkBlC,GAAUmC,eAElC,GAAInC,EAASoC,QACX,OAAOhuB,GAAK4rB,EAASqC,QAAU,kCAAoC,4BAGrE,GAAIrC,EAASsC,WACX,OAAOluB,GAAK,0BAGd,GAAIsf,EAAQK,WAAY,CACtB,GAAImO,EACF,OAAO9tB,GAAK,mCAAoC,CAC9Ce,KAAM6sB,GAAmB,UACzBxJ,MAAO0J,GACN,CAAEK,WAAW,EAAMC,YAAaN,IAGrC,GAAIlC,EAASyC,WACX,OAAOruB,GAAK,0CAA2C,CACrDe,KAAM6sB,GAAmB,WAG/B,CAEA,OAAIhC,EAAS0C,YACJhP,EAAQK,WACX3f,GAAK,sCAAuC,CAC5CuuB,QAAQZ,EAAAA,EAAAA,IAAcG,GACtB/sB,KAAM6sB,GAAmB,QACxB,CACDQ,YAAaN,EACbK,WAAW,EACXK,cAAc,IAEdxuB,GAAK,+BAAgC,CACrCuuB,QAAQZ,EAAAA,EAAAA,IAAcG,IACrB,CACDM,YAAaN,EACbK,WAAW,EACXK,cAAc,IAIhBV,EACK9tB,GAAK,6BAA8B,CACxCokB,MAAO0J,GACN,CAAEK,WAAW,EAAMC,YAAaN,IAGjClC,EAASyC,WACJruB,GAAK,yCADd,CAKF,CAwBSyuB,IAGHluB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,yBACbU,EAAAA,GAAAC,cAAC0sB,EAAAA,EAAQ,CAACC,OAAO,YAChBvB,EAAS8C,yBAA6BpP,EAAQK,aAAcqL,KAAc,IAAIpkB,OAC5CoiB,GAAQ,yBAAvChpB,GAAK,yBAEV4rB,EAAS1f,KAAKM,mBACbjM,EAAAA,GAAAC,cAACuK,EAAAA,EAAU,CACTE,MAAOsK,GAAgB,OACvBvK,KAAMge,GAAQ,yBAAyBxF,EAAAA,EAAAA,IAAqBoI,EAAS1f,KAAKM,sBAKpF,CAmJmBmiB,GACdtE,IAlJL,WACE,MAAMuB,EAAWtM,EAAQY,QAAQlb,QAAQ4mB,SACzC,IAAKA,GAAmC,mBAAvBA,EAAS1f,KAAK7G,KAA2B,OAE1D,MAAM8G,GAAUF,EAAAA,EAAAA,IAAmB2f,EAAS1f,MACtCE,GAAaM,EAAAA,EAAAA,IAAkBkf,EAAS1f,OACxC,SAAEU,EAAQ,QAAEC,EAAO,MAAEF,GAAUP,GAAc,CAAC,EAEpD,IAAKQ,IAAaC,IAAYF,EAAO,OAErC,MAAM2I,EAAmB,CAAC1I,EAASgiB,YAAahiB,EAASiiB,WAEnDC,EAAuB,GAAEliB,EAAS2I,aAAa1U,MAAM,EAAG,OAE9D,OACEN,EAAAA,GAAAC,cAAA,QACEX,UAAU,oEACV0F,SAAU,EACVM,KAAK,SACLnF,MAAQ,oBAAmBouB,IAC3B7rB,QAAS0oB,IAETprB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,4CACbU,EAAAA,GAAAC,cAAC6U,EAAAA,EAAuB,CACtBxV,UAAU,mCACVyV,iBAAkBA,EAClBC,aAAc3I,EAAS2I,aACvBC,YAAa3I,EAAQV,QACrBsJ,mBAAiB,KAGrBlV,EAAAA,GAAAC,cAACssB,EAAAA,EAAuB,CACtB3gB,QAASA,EACToS,KAAMwJ,EACNvJ,QAAM,EACNuO,gBAAc,EACdntB,KA7eqB,MA+etBysB,KACD9rB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,8BAA8Ba,MAAQ,UAASkM,EAASmiB,aACpEnD,EAAS1f,KAAKpG,MAAM,KAAG8lB,EAAS1f,KAAK8iB,QAExCzuB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,mCAAmCa,MAAQ,UAASkM,EAASmiB,aAC1ExuB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,kCACZmpB,GAAQ,wBAEXzoB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,+BACZ8M,EAAM3G,MAETzF,EAAAA,GAAAC,cAAA,OAAKX,UAAU,kCACZmpB,GAAQ,2BAEXzoB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,+BACZ+M,EAAS5G,MAEZzF,EAAAA,GAAAC,cAAA,OAAKX,UAAU,kCACZmpB,GAAQ,yBAEXzoB,EAAAA,GAAAC,cAAA,OAAKX,UAAU,+BACZgN,EAAQ7G,OAIbzF,EAAAA,GAAAC,cAAA,OAAKX,UAAU,yBACbU,EAAAA,GAAAC,cAAC0sB,EAAAA,EAAQ,CAACC,OAAO,WAChBnE,GAAQ,oBAEXzoB,EAAAA,GAAAC,cAACuK,EAAAA,EAAU,CACTE,MAAO6jB,EACP9jB,KAAMge,GAAQ,oBAItB,CAyEyBiG,GACpB3E,IAxEL,WACE,MAAMiD,EAAcjO,EAAQY,QAAQlb,QAAQuoB,YAE5C,OACEhtB,EAAAA,GAAAC,cAAA,QACEX,UAAU,8CACV0F,SAAU,EACVM,KAAK,SACL5C,QAASipB,IAET3rB,EAAAA,GAAAC,cAACssB,EAAAA,EAAuB,CACtBta,IAAK8M,EAAQha,GACb6G,QAASwb,EACTpJ,KAAMwJ,EACNvJ,QAAM,EACNuO,gBAAc,IAEhBxsB,EAAAA,GAAAC,cAAA,cACGwoB,GAAQuE,EAAc,yBAA2B,4BAEpDhtB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,2BACbunB,IAAcoG,EAAAA,EAAAA,GAAWxE,GAAQuE,EAC9B,4BAA8B,iCAAiCE,EAAAA,EAAAA,KAAazE,GAAS5B,IACzF,CAAC,qBAEH7mB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,4BACb2tB,EAAAA,EAAAA,GAAWxtB,GACV,gBAAiB,CACfokB,MACE7jB,EAAAA,GAAAC,cAAA,UAAImtB,EAAAA,EAAAA,IAAcrO,EAAQY,QAAQlb,QAAQ0iB,SAE3C,CACDyG,WAAW,EACXC,YAAa9O,EAAQY,QAAQlb,QAAQ0iB,QAEtC,CAAC,qBAENnnB,EAAAA,GAAAC,cAAA,QAAMX,UAAU,yBACdmpB,GAAQ,0BAKhB,CA6BqBkG,GAChBnF,IACCxpB,EAAAA,GAAAC,cAAC6e,EAA4B,CAACC,QAASA,EAASC,cAAeA,KAEhEyK,IACCzpB,EAAAA,GAAAC,cAACiiB,EAA0B,CAACnD,QAASA,EAASC,cAAeA,KAE9D0K,IAAmB1pB,EAAAA,GAAAC,cAACmkB,GAAe,CAACjD,OAAQyE,IAC5CiF,IACC7qB,EAAAA,GAAAC,cAAC2uB,EAAAA,EAAoB,CACnB7M,OAAQ6I,GACRiE,OAAQhE,GACR9L,QAASA,EACT+P,gBAAgB,SAChBjN,QAASmJ,GACT+D,oBAAqB9D,KAGxBjB,IACChqB,EAAAA,GAAAC,cAAC+uB,EAAAA,EAAS,CACRC,WAAS,EACTlQ,QAASA,EACTsC,SAAUA,EACVzG,oBAAqB8C,EACrB2F,qBAAsBA,KAGtB,I,wEC9sBV,MAQA,EARiD6L,IAC/C,MAAM,OAAEnN,GAAWmN,EACbN,GAAuBO,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,wBAAyBtN,GAGrF,OAAO6M,EAAuB5uB,EAAAA,GAAAC,cAAC2uB,EAAyBM,QAAY7tB,CAAS,C,8FCF/E,MAAMiuB,EAAsB,IACtBC,EAAyBC,EAAAA,IACzBC,EAAe,GAEN,SAAS3G,GAAgB,WACtCC,EAAU,OACV5H,EAAM,UACNiF,EAAS,eACTG,EAAc,iBACdE,EAAgB,oBAChBiJ,EAAmB,YACnB7H,EAAW,QACX8H,EAAO,qBACPC,IAYA,MAAMC,GAAiB5uB,EAAAA,EAAAA,KAAQ4mB,IAE/BiI,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAAcF,EAAeluB,QAGnC,GAFAkuB,EAAeluB,SAAU,EAErBykB,GAAa2C,EAAWpnB,QAAS,CACnC,MAAMquB,EAAoBjH,EAAWpnB,QAAQsuB,QAAwB,gBAE/DC,EAAazJ,EACb0J,EAAiBP,GAAwBM,EAAa,MAAQ,cAE9DE,EAAOA,KACX,MAAMC,OAAiChvB,IAAnBklB,EACf2J,EAAaZ,EAAsBC,OAA0BluB,EAE5DivB,GAASC,EAAAA,EAAAA,IAAc,CAC3Bzc,UAAWkc,EACXQ,QAASzH,EAAWpnB,QACpB8uB,SAAUN,EACVO,OAAQjB,EACRY,cACAM,eAAgBpK,EAChBqK,2BAA4BlB,EAC5BmB,wBAAwB,IAG1B,GAAIlB,EAAS,CACX,MAAMmB,EAAa/H,EAAWpnB,QAASovB,cAA+B,aAClED,IACFtuB,EAAAA,EAAAA,KAAgB,MACdwuB,EAAAA,EAAAA,IAAcF,EAAY,UAAU,GAG1C,CAEA,OAAOR,CAAM,EAGXP,GAEFkB,EAAAA,EAAAA,IAAoBb,IAEpBrgB,EAAAA,EAAAA,KAAe,MACbvN,EAAAA,EAAAA,IAAgB4tB,IAAQ,GAG9B,IACC,CACDrH,EAAY5H,EAAQiF,EAAWG,EAAgBE,EAAkBiJ,EAAqBC,EAASC,GAEnG,C,4SChDA,MAAMnW,EAAY,IAAMC,EAAAA,EAClBC,EAAc,IAAMD,EAAAA,EACpBwX,EAAoBrc,EAAAA,IAAUsc,EAAAA,GAAc,EAAI,EAChDC,EAAWvc,EAAAA,IAAUsc,EAAAA,GAAc,EAAI,EA8F7C,GAAejyB,EAAAA,EAAAA,KAAK2G,EAAAA,EAAAA,KAClB,CAACC,GAAU+T,kBACT,MAAM,gBAAEG,IAAoBC,EAAAA,EAAAA,KAAenU,GAErCoU,GAAcC,EAAAA,EAAAA,KAA+BrU,EAAQ,mBAE3D,MAAO,CACLkU,gBAAiBA,IAAkBH,GACnCK,cACD,GATerU,EA5FMwrB,EACxBxX,cACAxB,WACA/Y,YACAD,OAAOoa,EACPc,aAAaZ,EACbK,kBACAsX,cACApX,cACAU,0BAEA,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MAGzB9Z,GAAMC,EAAAA,EAAAA,IAAuB,MAE7BswB,GAAYtwB,EAAAA,EAAAA,IAAuB,OAElCuwB,EAAYC,IAAiBztB,EAAAA,EAAAA,IAAmB,IAEjD+X,GAAiBC,EAAAA,EAAAA,IAAkBhb,EAAK4Z,GAExCyB,GAAiBvc,EAAAA,EAAAA,KAAQ,IAC7Bka,GAAiBlO,MAAMwQ,IAAWpB,EAAAA,EAAAA,KAAeoB,EAAQjE,MACxD,CAAC2B,EAAiB3B,IAEfkE,EAAmB/S,QACvB0Q,GAAemC,GAEXqV,EAAoBF,EAAWzxB,OAASmxB,GAE9CS,EAAAA,EAAAA,IAAsB,EAAEC,MACjBrV,GAKA+U,GAAeA,IAAgBM,GAAmB,IAInDF,GACFD,GAAeI,GAAS,IAAIA,EAAMnkB,KAAKC,SATvC8jB,EAAc,GAUhB,GACC,CAACH,EAAaI,EAAmBnV,IAEpC,MACErb,aAAcub,IACZqV,EAAAA,EAAAA,GAAkB,CACpB9wB,IAAKuwB,EACLQ,mBAAmB,EACnBhQ,OAAQxF,EACRjd,UAAW,OACX0yB,kBAAkB,IAGdnV,GAAcpb,EAAAA,EAAAA,IAAgB,KAClC,MAAMwwB,EAAgBT,EAAWlxB,MAAM,GACvCmxB,EAAcQ,GACTA,EAAclyB,QACjB8a,EAAmB,CAAEhB,cAAaxB,YACpC,IAGIgF,GAAgBnd,EAAAA,EAAAA,GACpB4J,EAAAA,EAAOoB,KACPuR,GAAsB3S,EAAAA,EAAOwT,UAC7Bhe,GAGF,OACEU,EAAAA,GAAAC,cAAA,OAAKX,UAAW+d,EAAerc,IAAKA,EAAKkxB,eAAa,GACpDlyB,EAAAA,GAAAC,cAACkyB,EAAAA,EAAQ,CAAClgB,IAAI,OAAOnN,KAAK,OAAOzF,KAAK,WAAWc,MAAQ,UAASd,gBAAmBA,QACpFod,GAAsB+U,EAAWjxB,KAAKwE,GACrC/E,EAAAA,GAAAC,cAACmyB,EAAAA,EAAY,CACXngB,IAAKlN,EACL/D,IAAKuwB,EACLjyB,UAAWwK,EAAAA,EAAOsU,OAClB/e,KAAMkb,EACNwD,OAAQsU,EAAAA,EAAeC,mBACvBtU,KAAMjC,EACNkC,QAAM,EACNN,aAAW,EACX6O,gBAAc,EACd+F,QAASnB,EACT5Y,QAASqE,MAGT,K,gDCvGV,MAAM2V,EAAgB,KAAO9Y,EAAAA,EAiB7B,SAAS+Y,EAAiB3sB,GACxB,OAAOA,EAAOqhB,KAChB,CAEA,MA4KA,GAAejoB,EAAAA,EAAAA,KA5KQwzB,EACrBra,WACAwB,cACA8Y,eACAC,iBACAtzB,YACAuzB,kBACA1R,SACAC,YACAxG,sBACAlY,UACAowB,kBAEA,MAAM,sBACJC,EAAqB,wBACrBC,EAAuB,sBACvBC,EAAqB,YACrBC,IACEpY,EAAAA,EAAAA,MAEE9Z,GAAMC,EAAAA,EAAAA,IAA0B,MAEhCkyB,GAAalyB,EAAAA,EAAAA,IAAwB,MACrCmyB,GAAenyB,EAAAA,EAAAA,MAEfoyB,EAAoC,SAA3Bhb,EAASA,SAASvT,KAE3BwuB,GAAaC,EAAAA,EAAAA,GAAYd,GACzBe,EAAiBhqB,QAAQ8pB,GAEzBG,GAAkBhyB,EAAAA,EAAAA,IAAgB,CAACoiB,EAAQ,KAC/CiP,IAAcjP,EAAM,IAGhBriB,GAAcC,EAAAA,EAAAA,IAAiBC,IACnC,GAA+B,SAA3B2W,EAASA,SAASvT,KAIpB,OAHApD,EAAEgyB,uBACFD,IAKF/wB,IAAU2V,EAASA,SAAS,KAGxB,kBACJuS,EAAiB,wBACjBE,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBlqB,EAAgC,SAA3BqX,EAASA,SAASvT,UAAiBzD,OAAWA,OAAWA,GAAW,IAEpG+C,EAAAA,EAAAA,KAAU,KACJwmB,IACFqI,EAAsB,CACpB9R,SACAC,cAGF4J,IACAC,IACF,GACC,CAACD,EAAwBC,EAAuBL,EAAmBzJ,EAAQC,KAE9EuQ,EAAAA,EAAAA,IAAsB,EAAEgC,MACtB,MAAM3F,EAAS3V,EAASiZ,YAClBsC,EAAS5yB,EAAIW,QACnB,IAAKqsB,IAAW4F,GAAU5F,IAAW2F,GAAcrC,YAAa,OAEhE,GAAIkC,GAAkBxF,EAASsF,EAAWO,QAAQ7F,OAYhD,OAXA+E,EAAsB,CACpBe,eAAgB,CACd3S,SACAC,YACA4M,iBAGJgF,EAAwB,CACtB7R,SACAC,cAKJ,GAAI/I,EAASiZ,YAAa,CACxB,MAAM,KAAEpvB,EAAI,IAAEG,GAAQuxB,EAAO7xB,wBACvBgyB,EAAS7xB,EAAO0xB,EAAOhrB,YAAc,EACrCorB,EAAS3xB,EAAMuxB,EAAOK,aAAe,EAC3Cf,EAAY,CAAEa,SAAQC,UACxB,CAEA,MAAME,EAAeC,OAAOC,iBAAiBR,GAAQS,QAAU,EAC/DjB,EAAazxB,SAAS2yB,SAEtBlB,EAAazxB,QAAUiyB,EAAOW,QAAQ,CACpC,CAAEF,MAAOH,GACT,CAAEG,MAAOnrB,KAAKE,IAAmB,IAAf8qB,EArHN,GAqHsCzoB,OAAQ,IAC1D,CAAE4oB,MAAO,IACR,CACDG,SAAU,IAAMN,EAChBO,OAAQ,YACR,GACD,CAACpc,EAAUib,GAAYO,QAASL,EAAgBrS,EAAQC,IAE3D,MAAMsT,GAAaC,EAAAA,EAAAA,GAAYtc,EAASiZ,cAGtCpwB,aAAc0zB,IACZ9C,EAAAA,EAAAA,GAAkB,CACpB/P,OAAQvY,QAAQ6O,EAASiZ,aACzBtwB,IAAKmyB,EACL7zB,UAAW,OACX0yB,kBAAkB,IAGpB,OACEhyB,EAAAA,GAAAC,cAACyF,EAAAA,EAAM,CACLpG,WAAWY,EAAAA,EAAAA,GACT4J,EAAAA,EAAOoB,KACPynB,GAAgB7oB,EAAAA,EAAO+qB,IACvBxB,GAAUvpB,EAAAA,EAAOgrB,MACjBC,EAAAA,EAAAA,KAAiB1c,IAAavO,EAAAA,EAAOkrB,QACrCD,EAAAA,EAAAA,KAAiB1c,IAAawa,EAC9BvzB,GAEFD,KAAK,OACL2B,IAAKA,EACLmrB,YAAarB,EACbuB,cAAetB,EACfroB,QAASlB,GAEmB,SAA3B6W,EAASA,SAASvT,KACjB9E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAme,SAAA,KACEne,EAAAA,GAAAC,cAAC0sB,EAAAA,EAAQ,CAACC,OAAO,WACjB5sB,EAAAA,GAAAC,cAACoxB,EAAiB,CAChB/xB,UAAWwK,EAAAA,EAAOmrB,cAClBpb,YAAaA,EACbxB,SAAUA,EAASA,SACnBhZ,KAAMmzB,EACNlB,YAAajZ,EAASiZ,YACtB1W,oBAAqBA,IAEtBga,GACC50B,EAAAA,GAAAC,cAACi1B,EAAAA,EAAe,CACdl0B,IAAKmyB,EACL1oB,KAAO,KAAGwY,EAAAA,EAAAA,IAAqB5K,EAASiZ,aAAeoD,KACvDp1B,UAAWwK,EAAAA,EAAOqrB,eAKxBn1B,EAAAA,GAAAC,cAACqa,EAAAA,EAAqB,CACpBhb,UAAWwK,EAAAA,EAAOmrB,cAClBpb,YAAaA,EACbxB,SAAUA,EAASA,SACnBhZ,KAAMmzB,EACN5X,oBAAqBA,IAGxBgY,GAAgB7yB,OACfC,EAAAA,GAAAC,cAACd,EAAAA,EAAU,CAACE,KAAK,OAAOD,MAAOwzB,IAE/B5yB,EAAAA,GAAAC,cAACi1B,EAAAA,EAAe,CACdzqB,MAAMwY,EAAAA,EAAAA,IAAqB5K,EAASwL,OAASxL,EAASiZ,aAAe,IACrEhyB,UAAWwK,EAAAA,EAAOsrB,UAGf,I,eCnLb,MA6LA,GAAel2B,EAAAA,EAAAA,KA1LiB8vB,EAC9BjQ,UACAsC,WACA4N,YACAoG,WACAC,eACA1a,sBACA2a,mBACAlS,uBACAmS,WAEA,MAAM,eACJC,EAAc,qBACdC,EAAoB,mBACpBC,EAAkB,oBAClBC,EAAmB,iBACnBtS,EAAgB,wBAChB0P,EAAuB,iBACvB7T,IACErE,EAAAA,EAAAA,MACErb,GAAOC,EAAAA,EAAAA,MAEP,QAAEm2B,EAAO,QAAEC,EAAO,gBAAEC,GAAoBhX,EAAQhF,UAChDiQ,EAAuBxgB,QAAQuV,EAAQkL,sBAAwBlL,EAAQhF,WAEvE7N,GAAapM,EAAAA,EAAAA,KAAQ,IACzB+1B,EAAQG,QAAO,CAACC,EAAK5d,IAAa4d,EAAM5d,EAASwL,OAAO,IACvD,CAACgS,IAEEK,GAA8Bp2B,EAAAA,EAAAA,KAAQ,KAC1C,MAAMgG,GAASkH,EAAAA,EAAAA,MAEf,OAAO+oB,GAAiBC,QAAO,CAACC,EAAKE,KACnC,MAAM,SAAE9d,EAAQ,OAAEtS,GAAWowB,EACvBlkB,GAAMmkB,EAAAA,EAAAA,KAAe/d,GACrB7X,GAAOyF,EAAAA,EAAAA,KAAWH,EAAQC,GAEhC,IAAKvF,EAAM,OAAOy1B,EAElB,MAAM72B,EAAQ62B,EAAIhkB,IAAQ,GAG1B,OAFA7S,EAAMwR,KAAKpQ,GACXy1B,EAAIhkB,GAAO7S,EACJ62B,CAAG,GACT,CAAC,EAAuC,GAC1C,CAACF,IAEE7G,GAAQpvB,EAAAA,EAAAA,KAAQ,KACpB,MAAMu2B,GAAaC,EAAAA,EAAAA,IAAcvX,GACjC,OAAO8W,EAAQt1B,KAAK8X,IAClB,MAAMke,GAAcH,EAAAA,EAAAA,KAAe/d,EAASA,UACtCua,EAAiBsD,IAA8BK,GAC/CC,EAA2BtqB,EAtDZ,GAsD+CqpB,EAC9DkB,EAAMX,EAAUN,IAAOe,QAAel1B,EAE5C,MAAO,CACLgX,WACAke,cACAF,aACAzD,eAAiB4D,OAA4Cn1B,EAAjBuxB,EAC5C8D,UAAU3B,EAAAA,EAAAA,KAAiB1c,GAC3Boe,MACD,GACD,GACD,CAAC1X,EAASwW,EAAkBW,EAA6BL,EAASC,EAASN,EAAMtpB,IAE9E1K,GAAcC,EAAAA,EAAAA,IAAiB4W,IACnC,GAAIyd,EACF,OAAKzS,GAOLsS,EAAmB,CAAExU,OAAQpC,EAAQoC,OAAQE,WAAUsV,OAAQ,CAAEC,SAAUve,UAC3Eud,EAAoB,CAAEzU,OAAQpC,EAAQoC,OAAQE,mBAP5CiC,EAAiB,CACfuT,eAAgB,eAUtBpB,EAAe,CACbtU,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,GACnBsT,YACA,IAGEye,GAAiBh3B,EAAAA,EAAAA,KAAQ,IAAM+1B,EAAQ/pB,MAAMmP,GAA0B,SAApBA,EAAE5C,SAASvT,QAAkBwsB,aAAe,GAAG,CAACuE,IAEnGpC,GAAkBhyB,EAAAA,EAAAA,IAAiBoiB,IACvC6R,EAAqB,CACnBvU,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,GACnB8e,SACA,KAGJzf,EAAAA,EAAAA,KAAU,KACH0yB,GAEL3X,EAAiB,CACf4X,SAAST,EAAAA,EAAAA,IAAcvX,GACvBxZ,MAAO9F,EAAK,kBACZsf,QAAStf,EAAK,gBAAiBq3B,GAC/BxW,WAAY7gB,EAAK,iBACjBu3B,aAAcF,EAAeG,WAC7BxyB,OAAQ,CACNA,OAAQ,0BACRyb,QAAS,CAAEiB,OAAQpC,EAAQoC,OAAQC,UAAWrC,EAAQha,KAExDmyB,cAAe,CACbzyB,OAAQ,mBACRyb,QAAS,CAAEiB,OAAQpC,EAAQoC,OAAQC,UAAWrC,EAAQha,KAExDyvB,SAnHkB,IAoHlB2C,iBAAiB,EACjBC,qBAAqB,EACrB7wB,KAAM,QACN,GACD,CAAC9G,EAAMsf,EAAS+X,IAEnB,MAAMO,GAAuB51B,EAAAA,EAAAA,IAAiB4W,IAC5Cod,EAAe,CACbtU,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,GACnBsT,YACA,IAWJ,OAPAif,EAAAA,EAAAA,IAAc,IAAM,KAClBtE,EAAwB,CACtB7R,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,IACnB,IAIF/E,EAAAA,GAAAC,cAAA,OACEX,WAAWY,EAAAA,EAAAA,GACT,YACA+uB,GAAa,aACbjF,GAAwB,cAE1B7pB,MAAOk1B,EAAY,cAAaA,WAAeh0B,EAC/CjB,IAAKX,EAAKY,MAAQ,MAAQ,OAEzB6uB,EAAM3uB,KAAI,EACT8X,WAAUua,iBAAgByD,aAAYE,cAAaG,WAAUD,SAE7DX,EACE91B,EAAAA,GAAAC,cAACs3B,EAAAA,EAAc,CACbtlB,IAAKskB,EACLj3B,UAAU,mBACVuzB,gBAAgB,SAChBhZ,YAAawc,EACb1D,aAAc5T,EAAQK,WACtBsX,SAAUA,EACVre,SAAUA,EAASA,SACnBoe,IAAKA,EACLe,gBAAiBnU,EACjB3gB,QAASlB,EACTi2B,SAAUJ,EACVzc,oBAAqBA,IAGvB5a,EAAAA,GAAAC,cAACyyB,EAAc,CACbzgB,IAAKskB,EACLpV,OAAQpC,EAAQoC,OAChBC,UAAWrC,EAAQha,GACnBzF,UAAU,mBACVuzB,gBAAgB,SAChBhZ,YAAawc,EACb1D,aAAc5T,EAAQK,WACtBwT,eAAgBA,EAChBva,SAAUA,EACV3V,QAASlB,EACTsxB,YAAaW,EACb7Y,oBAAqBA,MAI1B0a,EACG,G,2KChOV,MC6EA,GAAep2B,EAAAA,EAAAA,KAvDMw4B,EACnB3V,SACAxc,QACA+M,WACAtP,cACA20B,aACAtyB,YACAuyB,eAAe,GACf/V,UACAne,eAEA,MAAMjE,GAAOC,EAAAA,EAAAA,MAEN+K,EAAMotB,IAAW7zB,EAAAA,EAAAA,IAAS4zB,GAE3BE,GAAmBr2B,EAAAA,EAAAA,IAAiBC,IACxCm2B,EAAQn2B,EAAEyD,OAAOF,MAAM,IAGnB8yB,GAAet2B,EAAAA,EAAAA,IAAgB,KACnCiC,EAAS+G,EAAK,IAGhB,OACEzK,EAAAA,GAAAC,cAAC+3B,EAAAA,EAAK,CACJ14B,UAAU,SACViG,MAAOA,EACPwc,OAAQA,EACRF,QAASA,EACToW,QAAM,GAELzuB,QAAQ8I,IACPtS,EAAAA,GAAAC,cAAA,OAAKX,UDtDc,YCuDhBgT,GAGLtS,EAAAA,GAAAC,cAACiU,EAAAA,EAAS,CACRlR,YAAaA,EACbiC,MAAOwF,EACPvF,SAAU4yB,EACVzyB,UAAWA,EACX6yB,2BAAyB,IAE3Bl4B,EAAAA,GAAAC,cAAA,OAAKX,UAAU,uBACbU,EAAAA,GAAAC,cAACyF,EAAAA,EAAM,CAACpG,UAAU,wBAAwBoD,QAASq1B,GAChDJ,GAAcl4B,EAAK,SAEtBO,EAAAA,GAAAC,cAACyF,EAAAA,EAAM,CAACpG,UAAU,wBAAwB64B,QAAM,EAACz1B,QAASmf,GACvDpiB,EAAK,YAGJ,I,qCCjDZ,MAAM+yB,EAAgB,KAAO9Y,EAAAA,EAiK7B,GAAexa,EAAAA,EAAAA,KA7IQq4B,EACrBlf,WACAoe,MACA5c,cACA6c,WACA/D,eACArzB,YACAuzB,kBACAuF,YACAC,aACAb,kBACA5c,sBACAlY,UACA+0B,eAEA,MAAM,qBAAEa,IAAyBxd,EAAAA,EAAAA,MAE3B9Z,GAAMC,EAAAA,EAAAA,IAA0B,MAEhCs3B,GAAUt3B,EAAAA,EAAAA,IAAuB,MAEjCxB,GAAOC,EAAAA,EAAAA,MACN84B,EAAoBC,EAAkBC,IAAqBzb,EAAAA,EAAAA,MAE5D,MAAE1X,EAAK,MAAEse,GAAU4S,GAAO,CAAC,EAC3BkC,EAAUnvB,QAAQjE,GAAU6yB,GAAavU,GAEzCriB,GAAcC,EAAAA,EAAAA,IAAgB,KAClCiB,IAAU2V,EAAS,IAGfugB,GAAoBn3B,EAAAA,EAAAA,IAAgB,KACxCg2B,IAAWpf,EAAS,IAGhBwgB,GAAkBp3B,EAAAA,EAAAA,IAAiBq3B,IACvCR,EAAqB,CACnBjgB,WACA9S,MAAOuzB,IAETJ,GAAmB,KAGf,kBACJ9N,EAAiB,kBACjBC,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBlqB,GAAMw2B,OAAiBn2B,OAAWA,OAAWA,GAAW,GAE7E03B,GAAoBt3B,EAAAA,EAAAA,IAAgB,IAAMT,EAAIW,UAC9Cq3B,GAAiBv3B,EAAAA,EAAAA,IAAgB,IAAMw3B,SAASC,OAChDC,GAAiB13B,EAAAA,EAAAA,IAAgB,IAAM82B,EAAQ52B,UAC/Cy3B,GAAY33B,EAAAA,EAAAA,IAAgB,KAAM,CAAG43B,YAAY,EAAMC,6BAA6B,MAE1F,IAAIlB,GAAuB,IAAVvU,EAIjB,OACE7jB,EAAAA,GAAAC,cAACyF,EAAAA,EAAM,CACLpG,WAAWY,EAAAA,EAAAA,GACT4J,EAAAA,EAAOoB,KACPpB,EAAAA,EAAO2sB,IACP9D,GAAgB7oB,EAAAA,EAAO+qB,IACvB6B,GAAY5sB,EAAAA,EAAOkrB,OACnB0B,GAAY7D,EACZwF,GAAcvuB,EAAAA,EAAOlE,SACrBtG,GAEFD,KAAK,OACLqD,QAASlB,EACT2qB,YAAarB,EACbuB,cAAetB,EACf/pB,IAAKA,GAELhB,EAAAA,GAAAC,cAACqa,EAAAA,EAAqB,CACpBhb,UAAWwK,EAAAA,EAAOmrB,cAClBpb,YAAaA,EACbxB,SAAUA,EACVsC,UApGW,EAqGXtb,KAAMmzB,EACN5X,oBAAqBA,IAEtB+d,GACC34B,EAAAA,GAAAC,cAAA,QAAMX,UAAWwK,EAAAA,EAAOyvB,SACrBh0B,GAASvF,EAAAA,GAAAC,cAAA,YAAOsF,GAChB6yB,GAAap4B,EAAAA,GAAAC,cAAA,YAAO4jB,IAGzB7jB,EAAAA,GAAAC,cAAA,OACEX,UAAWwK,EAAAA,EAAO0vB,KAClB14B,MAAM,KACNC,OAAO,KACP4I,QAAQ,aAER3J,EAAAA,GAAAC,cAAA,QAAMX,UAAWwK,EAAAA,EAAO2vB,SAAU5vB,EAAE,8JAErC2tB,GACCx3B,EAAAA,GAAAC,cAACy3B,EAAY,CACX3V,OAAQyW,EACRnzB,UA1He,GA2HfE,MAAO9F,EAAKg3B,GAAKlxB,MAAQ,oBAAsB,oBAC/C+M,SAAU7S,EAAK,wBACfuD,YAAavD,EAAK,4BAClBm4B,aAAcnB,GAAKlxB,MACnBsc,QAAS6W,EACTh1B,SAAUm1B,IAGbrB,GAAmB3M,GAClB7qB,EAAAA,GAAAC,cAACy5B,EAAAA,EAAI,CACH14B,IAAKu3B,EACLxW,OAAQ6I,EACRiE,OAAQhE,EACRkO,kBAAmBA,EACnBC,eAAgBA,EAChBG,eAAgBA,EAChBC,UAAWA,EACXO,WAAS,EACTN,YAAU,EACVxX,QAASmJ,EACT+D,oBAAqB9D,GAErBjrB,EAAAA,GAAAC,cAAC25B,EAAAA,EAAQ,CAACrzB,KAAK,aAAa7D,QAASlB,GAClC/B,EAAK,wBAERO,EAAAA,GAAAC,cAAC25B,EAAAA,EAAQ,CAACrzB,KAAK,WAAW7D,QAAS+1B,GAChCh5B,EAAKg3B,GAAKlxB,MAAQ,oBAAsB,qBAE3CvF,EAAAA,GAAAC,cAAC25B,EAAAA,EAAQ,CAACrzB,KAAK,cAAcszB,aAAW,EAACn3B,QAASk2B,GAC/Cn5B,EAAK,uBAIL,G,4HCpKN,SAASq6B,EACdh0B,EAAWi0B,GAEX,GAA0B,SAAtBA,EAAaj1B,KAAiB,OAAOi1B,EAEzC,GAA0B,aAAtBA,EAAaj1B,KAAqB,CACpC,MAAM,OACJiB,EAAM,eAAEi0B,EAAc,OAAEC,EAAM,QAAElb,EAAO,cAAEmb,GACvCH,EACEv5B,GAAOyF,EAAAA,EAAAA,KAAWH,EAAQC,GAEhC,IAAKvF,EAAM,OAEX,MAAO,CACLsE,KAAM,WACNtE,OACAw5B,iBACAC,SACAlb,UACAmb,gBAEJ,CAEA,GAA0B,cAAtBH,EAAaj1B,KAAsB,CACrC,MAAM,OACJ4lB,EAAM,MAAEvD,EAAK,OAAE6G,EAAM,SAAEmM,GACrBJ,EACE7zB,GAAOC,EAAAA,EAAAA,KAAWL,EAAQ4kB,GAEhC,IAAKxkB,EAAM,OAEX,MAAO,CACLpB,KAAM,QACNs1B,QAAS,CACPt1B,KAAM,YACNoB,OACAihB,QACA6G,SACAmM,YAGN,CAEA,GAA0B,UAAtBJ,EAAaj1B,KAAkB,CACjC,MAAM,MACJqiB,EAAK,OAAE6G,EAAM,SAAEmM,GACbJ,EAEJ,MAAO,CACLj1B,KAAM,QACNs1B,QAAS,CACPt1B,KAAM,QACNqiB,QACA6G,SACAmM,YAGN,CAEA,GAA0B,2BAAtBJ,EAAaj1B,KAAmC,CAClD,MAAM,KAAEu1B,GAASN,EAEjB,MAAO,CACLj1B,KAAM,yBACNu1B,OAEJ,CAEA,GAA0B,YAAtBN,EAAaj1B,KAAoB,CACnC,MAAMqC,GAAOgG,EAAAA,EAAAA,KAAWrH,EAAQi0B,EAAa5Y,QAC7C,IAAKha,EACH,OAEF,MAAO,CACLrC,KAAM,UACNqC,OACAia,UAAW2Y,EAAa3Y,UAE5B,CAEA,GAA0B,aAAtB2Y,EAAaj1B,KAAqB,CACpC,MAAM,QACJw1B,EAAO,eAAEC,EAAc,OAAEvM,EAAM,SAAEmM,EAAQ,OAAEK,EAAM,QAAEzb,GACjDgb,EAIJ,MAAO,CACLj1B,KAAM,WACN01B,SACAJ,QAAS,CACPt1B,KAAM,WACNkpB,SACAmM,WACA5P,MAVU+P,EAAQ/5B,KAAKwE,IAAOoB,EAAAA,EAAAA,KAAWL,EAAQf,KAAKqL,OAAO5G,SAW7DixB,aAViBF,GAAiBptB,EAAAA,EAAAA,KAAWrH,EAAQy0B,QAAkBl5B,EAWvE0d,WAGN,CAEA,GAA0B,kBAAtBgb,EAAaj1B,KAA0B,CACzC,MAAM,OACJqc,EAAM,qBAAEuZ,EAAoB,OAAE1M,EAAM,SAAEmM,EAAQ,UAAEQ,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBACvFC,EAAuB,iBAAEC,EAAgB,MAAE5T,EAAK,MAAEoD,GAChDwP,EACE5yB,GAAOgG,EAAAA,EAAAA,KAAWrH,EAAQqb,GAChC,IAAKha,EACH,OAEF,MAAM6zB,EAAqBN,GAAsBn6B,KAAKwE,IAAOoI,EAAAA,EAAAA,KAAWrH,EAAQf,KAAKqL,OAAO5G,SAE5F,MAAO,CACL1E,KAAM,gBACNs1B,QAAS,CACPt1B,KAAM,gBACNkpB,SACAmM,WACAhzB,OACA6zB,qBACAL,YACAC,oBACAC,YACAC,0BACAC,mBACA5T,QACAoD,SAGN,CAEA,GAA0B,aAAtBwP,EAAaj1B,KAAqB,CACpC,MAAM,OACJqc,EAAM,qBAAEuZ,EAAoB,OAAE1M,EAAM,SAAEmM,EAAQ,OAAEK,EAAM,UAAEG,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBAC/FC,EAAuB,iBAAEC,GACvBhB,EACE5yB,GAAOgG,EAAAA,EAAAA,KAAWrH,EAAQqb,GAChC,IAAKha,EACH,OAEF,MAAM6zB,EAAqBN,GAAsBn6B,KAAKwE,IAAOoI,EAAAA,EAAAA,KAAWrH,EAAQf,KAAKqL,OAAO5G,SAE5F,MAAO,CACL1E,KAAM,WACN01B,SACAJ,QAAS,CACPt1B,KAAM,WACNkpB,SACAmM,WACAhzB,OACA6zB,qBACAL,YACAC,oBACAC,YACAC,0BACAC,oBAGN,CAEA,GAA0B,oBAAtBhB,EAAaj1B,KAA4B,CAC3C,MAAM,eAAEm2B,EAAc,0BAAEC,GAA8BnB,EAChDoB,EAAYC,EAA6Bt1B,EAAQm1B,GACvD,IAAKE,EAAW,OAEhB,MAAO,CACLr2B,KAAM,kBACNm2B,eAAgBE,EAChBD,4BAEJ,CAEA,GAA0B,qBAAtBnB,EAAaj1B,KAA6B,CAC5C,MAAM,eAAEm2B,EAAc,YAAEI,GAAgBtB,EAClCoB,EAAYC,EAA6Bt1B,EAAQm1B,GACjDz6B,GAAOyF,EAAAA,EAAAA,KAAWH,EAAQu1B,GAChC,IAAKF,IAAc36B,EAAM,OAEzB,MAAO,CACLsE,KAAM,mBACNm2B,eAAgBE,EAChBG,UAAW96B,EAEf,CAGF,CAEO,SAAS46B,EACdt1B,EAAWy1B,GAEX,GAAuB,SAAnBA,EAAUz2B,KAAiB,OAAOy2B,EAEtC,GAAuB,SAAnBA,EAAUz2B,KAAiB,CAC7B,MAAMqC,GAAOgG,EAAAA,EAAAA,KAAWrH,EAAQy1B,EAAUpa,QAC1C,IAAKha,EAAM,OAEX,MAAO,CACLrC,KAAM,OACNqC,OACAumB,QAAS6N,EAAU7N,QAEvB,CAGF,CAEO,SAAS8N,EACdh7B,GAEA,MAAkB,aAAdA,EAAKsE,KACA,CACL22B,WAAY,OACZC,cAAc,EACdC,SAAU,2CACVC,YAAa,8CACbC,YAAa,GAIC,eAAdr7B,EAAKsE,KACA,CACL22B,WAAY,OACZC,cAAc,EACdC,SAAU,4CACVC,YAAa,+CACbC,YAAa,GAIC,aAAdr7B,EAAKsE,KACA,CACL22B,WAAY,OACZC,cAAc,EACdC,SAAU,8CACVC,YAAa,iDACbE,sBAAuB,WAIT,eAAdt7B,EAAKsE,KACA,CACL22B,WAAY,OACZC,cAAc,EACdC,SAAU,gDACVC,YAAa,mDACbC,YAAa,EACbE,qBAAqB,GAIP,QAAdv7B,EAAKsE,KACA,CACL22B,WAAY,OACZC,cAAc,EACdC,SAAU,4CACVC,YAAa,+CACbC,YAAa,GAIC,QAAdr7B,EAAKsE,KACA,CACL22B,WAAY,OACZC,cAAc,EACdC,SAAU,+CACVC,YAAa,kDACbC,YAAa,GAIV,CACLJ,WAAY,OACZC,cAAc,EACdC,SAAU,4CACVC,YAAa,4CACbC,YAAa,EAEjB,CAEO,SAASG,EAA6Bv8B,EAAcw8B,GACzD,MAAMjO,EAASiO,EAAYjO,OAASiO,EAAYC,MAAQ,IACxD,OAAIlO,EAAS,EACH,KAAIvuB,EAAKgvB,OAAOvlB,KAAKizB,IAAInO,MAG3B,KAAIvuB,EAAKgvB,OAAOT,IAC1B,CAEO,SAASoO,EAAkB38B,EAAcw8B,GAC9C,OAAOx8B,EAAKgvB,OAAOwN,EAAYjO,OAASiO,EAAYC,MAAQ,IAC9D,CAEO,SAASG,EAA4Btd,GAC1C,MAAM,OAAEta,GAAWsa,EAAQY,QAE3B,GAAqB,cAAjBlb,GAAQK,KAAsB,OAElC,MAAM,cAAEw3B,EAAa,MAAEnV,GAAU1iB,EAEjC,MAAO,CACLM,GAAIu3B,EACJnV,MAAO,CACL6G,OAAQ7G,EACR+U,MAAO,GAET17B,KAAM,CACJsE,KAAM,OACNC,GAAIga,EAAQK,WAAaL,EAAQoC,OAAUpC,EAAQ2G,UAAY3G,EAAQoC,QAEzE5T,KAAMwR,EAAQxR,KACdge,QAAQ,EACRgR,SAAUxd,EAAQK,iBAAc/d,EAEpC,CAEO,SAASm7B,EAAqCzd,GACnD,MAAM,OAAEta,GAAWsa,EAAQY,QAE3B,GAAqB,eAAjBlb,GAAQK,KAAuB,OAEnC,MAAM,cAAEw3B,EAAa,MAAEnV,EAAK,aAAEvB,GAAiBnhB,EAE/C,MAAO,CACLM,GAAIu3B,EACJnV,MAAO,CACL6G,OAAQ7G,EACR+U,MAAO,GAET17B,KAAM,CACJsE,KAAM,OACNC,GAAI6gB,GAENrY,KAAMwR,EAAQxR,KACdkvB,eAAgB1d,EAAQha,GAE5B,CAEO,SAAS23B,EAAwBC,EAA4BC,GAClE,OAAOC,EAAAA,EAAAA,GAAqBF,EAAKC,EACnC,C,6DCnVA,QAfA,SAAqBE,EAA8BC,EAAgBC,GAAU,GAC3E,MAAMC,GAAgBx7B,EAAAA,EAAAA,GAAgBq7B,IAEtC14B,EAAAA,EAAAA,KAAU,KACR,QAAc/C,IAAV07B,EACF,OAGF,MAAMh4B,EAAKm4B,aAAY,IAAMD,KAAiBF,GAG9C,OAFKC,GAASC,IAEP,IAAME,cAAcp4B,EAAG,GAC7B,CAACg4B,EAAOC,GACb,C,6DCAA,QAbA,SAAoBF,EAA8BC,GAChD,MAAME,GAAgBx7B,EAAAA,EAAAA,GAAgBq7B,IAEtC14B,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAV24B,EACT,OAGF,MAAMh4B,EAAK+K,YAAW,IAAMmtB,KAAiBF,GAC7C,MAAO,IAAM/sB,aAAajL,EAAG,GAC5B,CAACg4B,GACN,C,8FCRA,MAAMK,EAAS,EACTC,EAAa,EAEJ,SAAS97B,EACtB+7B,EACAjF,GAAa,EACbkF,EACAC,EAASJ,EACTK,EACAC,GAGA,MAAMp8B,GAAYL,EAAAA,EAAAA,IAA0B,MACtC08B,GAAY18B,EAAAA,EAAAA,MAmDlB,OAjDA28B,EAAAA,EAAAA,IAAc,KACPvF,IACHsF,EAAUh8B,SAAU,EACtB,GACC,CAAC27B,EAASjF,KAEbj0B,EAAAA,EAAAA,KAAU,KACR,MAAMgT,EAAS9V,EAAUK,QAEzB,IAAK27B,IAAYlmB,GAAUihB,GAAcsF,EAAUh8B,QACjD,OAGFg8B,EAAUh8B,SAAU,EAEpB,MAAMk8B,EAAM,IAAIC,MAEVC,EAAcA,KAClB,MAAMj9B,EAAQ28B,GAAkBI,EAAI/8B,MAC9BC,EAAS28B,GAAmBG,EAAI98B,OAChCsW,EAAMD,EAAOE,WAAW,KAAM,CAAE0mB,OAAO,KAE7Cx7B,EAAAA,EAAAA,KAAgB,KACd4U,EAAOtW,MAAQA,EACfsW,EAAOrW,OAASA,EAEZk9B,EAAAA,KACF5mB,EAAIjH,OAAU,QAAOotB,QAGvBnmB,EAAIM,UAAUkmB,EAAe,GAATL,EAAsB,GAATA,EAAY18B,EAAiB,EAAT08B,EAAYz8B,EAAkB,EAATy8B,GAErES,EAAAA,KACHC,EAAAA,EAAAA,GAAS7mB,EAAK,EAAG,EAAGvW,EAAOC,EAAQy8B,EAAQH,EAC7C,GACA,EAGJQ,EAAIM,OAAS,KACPZ,GACFxtB,EAAAA,EAAAA,IAAeguB,GAEfA,GACF,EAGFF,EAAIvkB,IAAMgkB,CAAO,GAChB,CAACA,EAASjF,EAAYqF,EAAiBD,EAAgBD,EAAQD,IAE3Dj8B,CACT,C,kDCrEe,SAASqzB,EAA2BhzB,GACjD,MAAMy8B,GAAUn9B,EAAAA,EAAAA,MACVo9B,GAAUp9B,EAAAA,EAAAA,MAQhB,OANIo9B,EAAQ18B,UAAYA,IACtBy8B,EAAQz8B,QAAU08B,EAAQ18B,SAG5B08B,EAAQ18B,QAAUA,EAEXy8B,EAAQz8B,OACjB,C,uGCqCA,QAvCA,SACEX,EACAs9B,GAAsB,GAEtB,MAAM,iBACJC,IACEzjB,EAAAA,EAAAA,MACE0jB,GAAmBv9B,EAAAA,EAAAA,IAAO,GAE1Bw9B,GAAeh9B,EAAAA,EAAAA,IAClBsV,IACC,MAAM2nB,EAAaF,EAAiB78B,QAE9Bg9B,EAAY5nB,EAAMC,YAAYjW,OAGpC,GAFAy9B,EAAiB78B,QAAUg9B,GAEvBC,EAAAA,EAAAA,QAAwBF,GAAcC,GAAaD,EAAY,OAEnE,MAAM5qB,EAAYiD,EAAM5R,OAAO8qB,QAAQ,gBACvC,IAAKnc,EAAW,QAEhB+qB,EAAAA,EAAAA,IAvB4B,KAyB5B,MAAMC,EAAaH,EAAYD,GACzB,aAAEzK,EAAY,aAAE8K,EAAY,UAAEC,GAAclrB,EACtB5K,KAAK+1B,MAAMF,EAAeC,EAAY/K,GACf6K,GA9BnB,GAiC9BP,GACF,IAIEW,GAAkBC,EAAAA,EAAAA,GAAqBV,EAAc,CAACA,GArC1C,KAqCsE,IAExFn1B,EAAAA,EAAAA,GAAkBtI,EAAKk+B,GAAkBZ,EAC3C,C,kDC/Ce,SAASc,EAAgBC,EAAYrC,EAAmBsC,EAAkBC,EAAY,IACnG,OAAOC,EAAAA,EAAAA,IAAsBC,IAC3BA,GAAI,GAEHF,EAAMF,EAAIrC,EAASsC,EACxB,C,mCC2CA,MAAMI,EAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAE5qlgC,SAASC,EAAiBC,EAASC,EAAOC,EAAOj/B,EAAOC,EAAQy8B,EAAQwC,GACrF,GAAI7L,OAAO8L,MAAMzC,IAAWA,EAAS,EAAG,OAExCA,GAAU,EAENrJ,OAAO8L,MAAMD,KAAaA,EAAa,IAC3CA,GAAc,GACG,IAAGA,EAAa,GAC7BA,EAAa,IAAGA,EAAa,GAEjC,MAAME,EAAYL,EAAQM,aAAaL,EAAOC,EAAOj/B,EAAOC,GAEtDq/B,EAASF,EAAUG,KAEzB,IAAIC,EACAC,EACAC,EACAx+B,EACAG,EACA8R,EACAwsB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAKjgC,EAAQ,EACbkgC,EAAKjgC,EAAS,EACdkgC,EAAOzD,EAAS,EAEhBviB,EAAI,GACJimB,EAAI,GACJC,EAAI,GAEJC,EAAU1B,EAAUlC,GACpB6D,EAAU1B,EAAUnC,GAEpB8D,EAAO,GACPC,EAAO,GAEX,KAAOvB,KAAe,GAAG,CAGvB,IAFAc,EAAKD,EAAK,EAEL1+B,EAAI,EAAGA,EAAIpB,EAAQoB,IAAK,CAK3B,IAJAm+B,EAAOF,EAAOU,GAAMG,EACpBV,EAAOH,EAAOU,EAAK,GAAKG,EACxBT,EAAOJ,EAAOU,EAAK,GAAKG,EAEnBhtB,EAAI,EAAGA,GAAKupB,EAAQvpB,IACvBwsB,EAAIK,IAAQ7sB,EAAI8sB,EAAKA,EAAK9sB,IAAO,GACjCqsB,GAAQF,EAAOK,KACfF,GAAQH,EAAOK,KACfD,GAAQJ,EAAOK,KAGjB,IAAKz+B,EAAI,EAAGA,EAAIlB,EAAOkB,IACrBiZ,EAAE4lB,GAAMP,EACRY,EAAEL,GAAMN,EACRY,EAAEN,GAAML,EAEC,GAALr+B,IACFm/B,EAAKt/B,KAAOy+B,EAAIz+B,EAAIi/B,GAAQF,EAAKN,EAAIM,IAAO,EAC5CQ,EAAKv/B,IAAOy+B,EAAIz+B,EAAIw7B,GAAU,EAAIiD,GAAK,EAAI,GAG7CC,EAAKI,EAAKQ,EAAKt/B,GACf2+B,EAAKG,EAAKS,EAAKv/B,GAEfs+B,GAAQF,EAAOM,KAAQN,EAAOO,KAC9BJ,GAAQH,EAAOM,KAAQN,EAAOO,KAC9BH,GAAQJ,EAAOM,KAAQN,EAAOO,KAE9BE,IAEFC,GAAOhgC,GAAS,CAClB,CAEA,IAAKkB,EAAI,EAAGA,EAAIlB,EAAOkB,IAAK,CAM1B,IALA4+B,EAAK5+B,EACLs+B,EAAOrlB,EAAE2lB,GAAMK,EACfV,EAAOW,EAAEN,GAAMK,EACfT,EAAOW,EAAEP,GAAMK,EAEVhtB,EAAI,EAAGA,GAAKupB,EAAQvpB,IACvB2sB,GAAO3sB,EAAI+sB,EAAK,EAAIlgC,EACpBw/B,GAAQrlB,EAAE2lB,GACVL,GAAQW,EAAEN,GACVJ,GAAQW,EAAEP,GAIZ,IADAC,EAAK7+B,GAAK,EACLG,EAAI,EAAGA,EAAIpB,EAAQoB,IACtBi+B,EAAOS,GAAOP,EAAOc,IAAaC,EAClCjB,EAAOS,EAAK,GAAMN,EAAOa,IAAaC,EACtCjB,EAAOS,EAAK,GAAML,EAAOY,IAAaC,EAE7B,GAALr/B,IACFs/B,EAAKn/B,KAAOs+B,EAAIt+B,EAAI8+B,GAAQD,EAAKP,EAAIO,GAAMlgC,EAC3CygC,EAAKp/B,IAAOs+B,EAAIt+B,EAAIq7B,GAAU,EAAIiD,EAAI3/B,EAAQ,GAGhD4/B,EAAK1+B,EAAIs/B,EAAKn/B,GACdw+B,EAAK3+B,EAAIu/B,EAAKp/B,GAEdm+B,GAAQrlB,EAAEylB,GAAMzlB,EAAE0lB,GAClBJ,GAAQW,EAAER,GAAMQ,EAAEP,GAClBH,GAAQW,EAAET,GAAMS,EAAER,GAElBE,GAAM//B,GAAS,CAEnB,CACF,CAEA++B,EAAQ2B,aAAatB,EAAWJ,EAAOC,EACzC,C,sKC1IA,IACI0B,EACAC,EAFAC,GAAc,EAIH,SAASpR,EAAcqR,GACpCH,EAAcG,EACd,MAAMC,EAASC,EAAqBF,GAEpC,GAAIA,EAAK/Q,uBACP,OAAOgR,GAGTr/B,EAAAA,EAAAA,IAAgBq/B,EAElB,CAEO,SAASE,IACTJ,KAILK,EAAAA,EAAAA,OAEAjyB,EAAAA,EAAAA,KAAe,MACbvN,EAAAA,EAAAA,IAAgBs/B,EAAqBL,GAAc,IAEvD,CAEA,SAASK,EAAqBF,GAC5B,MAAM,UACJ9tB,EAAS,QACT0c,EAAO,SACPC,EAAQ,OACRC,EAAS,EAAC,YACVL,EAAcb,EAAAA,IAAmB,eACjCmB,EAAc,2BACdC,GACEgR,EAEJ,IAAIK,EAAgBL,EAAKK,cAGvBtR,IAAmBuR,EAAAA,GAAeC,SAC9BC,EAAAA,EAAAA,MAA0Bp1B,EAAAA,EAAAA,SAE9Bi1B,EAAgB,GAGlB,MAAQhO,aAAcoO,GAAkB7R,GAChCwO,UAAWsD,EAAkBrO,aAAcsO,EAAe,aAAExD,GAAiBjrB,EAC/E0uB,GAAaC,EAAAA,EAAAA,GAAqBjS,EAAS1c,GAAWzR,IAEtDqgC,EAAwB9R,GAA8B9c,EAAU6uB,QAAQC,aAC1EzO,OAAOrgB,EAAU6uB,QAAQC,cACzBL,EAEJ,IAAIM,EACJ,OAAQpS,GACN,IAAK,QACHoS,EAAYL,EAAa9R,GAAWS,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACH0R,EAAYL,EAAaH,EAAgB3R,EAAUgS,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHG,EAAWR,EAAgBK,EACtBF,EAAaH,EAAgB,EAAIK,EAAwB,EACzDF,EAAa9R,EAItB,MAAMoS,EAwER,SACEhvB,EACA+uB,EACAxS,EAAcb,EAAAA,IACdmB,GAEA,MAAM,UAAEqO,GAAclrB,EAEtB,QAAuBzS,IAAnBsvB,EAA8B,CAChC,MAAMllB,EAASo3B,EAAW7D,EAE1B,GAAIvzB,GAAU4kB,EACZ,OAAO2O,GAAavzB,EAAS4kB,GACxB,GAAI5kB,EAAS4kB,EAClB,OAAO2O,GAAavzB,EAAS4kB,EAEjC,KAAO,IAAIM,IAAmBuR,EAAAA,GAAea,GAC3C,OAAOF,EAAWxS,EACb,GAAIM,IAAmBuR,EAAAA,GAAec,KAC3C,OAAO95B,KAAKC,IAAI,EAAG05B,EAAWxS,EAChC,CAEA,OAAO2O,CACT,CA/FqBiE,CAAoBnvB,EAAW+uB,EAAUxS,EAAaM,GAEzE,IAAIzX,EAAO2pB,EAAWC,EACtB,GAAI5pB,EAAO,EAAG,CACZ,MAAMgqB,GAAiBJ,EACvB5pB,EAAOhQ,KAAKC,IAAI+P,EAAMgqB,EACxB,MAAO,GAAIhqB,EAAO,EAAG,CACnB,MAAMgqB,EAAgBnE,GAAgB+D,EAAaJ,GACnDxpB,EAAOhQ,KAAKE,IAAI8P,EAAMgqB,EACxB,CAEA,MAAMC,EAAUj6B,KAAKizB,IAAIjjB,GAEzB,MAAO,KACL,GAAIiqB,EAAU,EAKZ,YAJIb,IAAqBQ,IACvBhvB,EAAUkrB,UAAY8D,IAM1B,MAAM39B,EAAS29B,EAAa5pB,EAE5B,GAAsB,IAAlB+oB,EAEF,YADAnuB,EAAUkrB,UAAY75B,GAIxB,MAAMi+B,EAAaD,GAAWE,EAAAA,IAAuCC,EAAkBC,EACjF/O,EAAWyN,GACfuB,EAAAA,IACGL,EAAU3T,EAAAA,KAAwBiU,EAAAA,IAAsBD,EAAAA,KAEvDE,EAAUh2B,KAAKC,MAErBg0B,GAAc,EAEd,MAAMgC,EAA0BjC,EAChCA,GAAsB7C,EAAAA,EAAAA,SAAoBx9B,GAAW,GACrDsiC,OAEAC,EAAAA,EAAAA,KAAc,KACZ,MAAMC,EAAI36B,KAAKE,KAAKsE,KAAKC,MAAQ+1B,GAAWlP,EAAU,GAChDsP,EAAc5qB,GAAQ,EAAIkqB,EAAWS,IACrCE,EAAe76B,KAAK+1B,MAAM95B,EAAS2+B,GAazC,OAXAhwB,EAAUkrB,UAAY+E,EAEtBpC,EAAckC,EAAI,GAAKE,IAAiB5+B,EAEnCw8B,IACHF,OAAcpgC,EAEdqgC,MACAA,OAAsBrgC,GAGjBsgC,CAAW,GACjBn/B,EAAAA,GAAgB,CAEvB,CAEO,SAASo8B,IACd,OAAO+C,CACT,CAEO,SAASqC,IACdtC,IACAA,OAAsBrgC,CACxB,CA2BA,SAASiiC,EAAgBO,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAASN,EAAeM,GACtB,OAAO,GAAM,EAAIA,IAAM,CACzB,C,2HC/LO,SAASI,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAME,UAAU,EAAG,GAAI,IAChCD,SAASD,EAAME,UAAU,EAAG,GAAI,IAChCD,SAASD,EAAME,UAAU,EAAG,GAAI,IAEpC,CAOO,SAASrhB,EAAQmhB,GACtB,MAAMG,EAAKH,EAAM,GAAGjN,SAAS,IACvByJ,EAAKwD,EAAM,GAAGjN,SAAS,IACvB0J,EAAKuD,EAAM,GAAGjN,SAAS,IAC7B,OAAqB,GAAboN,EAAGtkC,OAAc,IAAMskC,EAAKA,IAAoB,GAAb3D,EAAG3gC,OAAc,IAAM2gC,EAAKA,IAAoB,GAAbC,EAAG5gC,OAAc,IAAM4gC,EAAKA,EAC5G,CAaO,SAAS2D,GAASrpB,EAAGimB,EAAGC,IAC7BlmB,GAAK,IACLimB,GAAK,IACLC,GAAK,IAEL,IACIoD,EAAYC,EADZr7B,EAAMD,KAAKC,IAAI8R,EAAGimB,EAAGC,GAAI/3B,EAAMF,KAAKE,IAAI6R,EAAGimB,EAAGC,GACvBsD,EAAYt7B,EAEnCU,EAAIV,EAAMC,EAGd,GAFAo7B,EAAW,GAAPr7B,EAAW,EAAIU,EAAIV,EAEnBA,GAAOC,EACTm7B,EAAI,MACC,CACL,OAAQp7B,GACN,KAAK8R,EACHspB,GAAKrD,EAAIC,GAAKt3B,GAAKq3B,EAAIC,EAAI,EAAI,GAC/B,MACF,KAAKD,EACHqD,GAAKpD,EAAIlmB,GAAKpR,EAAI,EAClB,MACF,KAAKs3B,EACHoD,GAAKtpB,EAAIimB,GAAKr3B,EAAI,EAItB06B,GAAK,CACP,CAEA,MAAO,CAACA,EAAGC,EAAGC,EAChB,CAaO,SAASC,GAASH,EAAGC,EAAGC,IAC7B,IAAIxpB,EAAYimB,EAAYC,EAExBltB,EAAI/K,KAAKmN,MAAU,EAAJkuB,GACfI,EAAQ,EAAJJ,EAAQtwB,EACZwsB,EAAIgE,GAAK,EAAID,GACbI,EAAIH,GAAK,EAAIE,EAAIH,GACjBX,EAAIY,GAAK,GAAK,EAAIE,GAAKH,GAE3B,OAAQvwB,EAAI,GACV,KAAK,EACHgH,EAAIwpB,EACJvD,EAAI2C,EACJ1C,EAAIV,EACJ,MACF,KAAK,EACHxlB,EAAI2pB,EACJ1D,EAAIuD,EACJtD,EAAIV,EACJ,MACF,KAAK,EACHxlB,EAAIwlB,EACJS,EAAIuD,EACJtD,EAAI0C,EACJ,MACF,KAAK,EACH5oB,EAAIwlB,EACJS,EAAI0D,EACJzD,EAAIsD,EACJ,MACF,KAAK,EACHxpB,EAAI4oB,EACJ3C,EAAIT,EACJU,EAAIsD,EACJ,MACF,KAAK,EACHxpB,EAAIwpB,EACJvD,EAAIT,EACJU,EAAIyD,EAIR,MAAO,CACL17B,KAAK+1B,MAAU,IAAJhkB,GACX/R,KAAK+1B,MAAU,IAAJiC,GACXh4B,KAAK+1B,MAAU,IAAJkC,GAEf,CAEOxgB,eAAemC,EAAgB+hB,GAEpC,MACMC,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIzE,EACAv/B,EACAC,EAEAhB,EADAkU,GAAK,EAEL8wB,EAAgC,CAAC,EAAG,EAAG,GACvClhB,EAAQ,EAEZ,MAAMzM,EAAS6hB,SAASh5B,cAAc,UAChC4/B,EAAUzoB,EAAOE,YAAcF,EAAOE,WAAW,MACvD,IAAKuoB,EACH,OAAOiF,EAGT,MAAME,QAAcjvB,EAAAA,EAAAA,IAAa8uB,GACjC9jC,EAASikC,EAAMC,eAAiBD,EAAM/Q,cAAgB+Q,EAAMjkC,OAC5DD,EAAQkkC,EAAME,cAAgBF,EAAMp8B,aAAeo8B,EAAMlkC,MACzDsW,EAAOrW,OAASA,EAChBqW,EAAOtW,MAAQA,EAEf++B,EAAQloB,UAAUqtB,EAAO,EAAG,GAE5B,IACE3E,EAAOR,EAAQM,aAAa,EAAG,EAAGr/B,EAAOC,EAC3C,CAAE,MAAOW,GACP,OAAOojC,CACT,CAKA,IAHA/kC,EAASsgC,EAAKA,KAAKtgC,QAGXkU,GAAKkxB,IAAiBplC,GACH,IAArBsgC,EAAKA,KAAKpsB,EAAI,OAChB4P,EACFkhB,EAAI,IAAM1E,EAAKA,KAAKpsB,GACpB8wB,EAAI,IAAM1E,EAAKA,KAAKpsB,EAAI,GACxB8wB,EAAI,IAAM1E,EAAKA,KAAKpsB,EAAI,IAO1B,OAJA8wB,EAAI,GAAK77B,KAAKmN,MAAM0uB,EAAI,GAAKlhB,GAC7BkhB,EAAI,GAAK77B,KAAKmN,MAAM0uB,EAAI,GAAKlhB,GAC7BkhB,EAAI,GAAK77B,KAAKmN,MAAM0uB,EAAI,GAAKlhB,GAEtBkhB,CACT,CAEO,SAASK,EAAaC,GAC3B,MAAOpqB,EAAGimB,EAAGC,GAAKkE,EAElB,MADa,MAASpqB,EAAI,MAASimB,EAAI,MAASC,CAElD,CAGO,SAASmE,EAAgBD,GAC9B,IAAKE,EAAKC,EAAYvgC,GAASq/B,EAAQe,GAOvC,OALAG,EAAat8B,KAAKE,IAAI,EAAGo8B,EAAa,IAAO,IAAO,EAAIA,IACxDvgC,EAAQA,EAAQ,GACZiE,KAAKC,IAAI,EAAW,IAARlE,GACZiE,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAG,EAAY,IAARnE,IAExB,QAAa,IAANsgC,MAA2B,IAAbC,OAA8B,IAARvgC,SACrD,CAGO,MAAMwgC,EAAiB/6B,GAOpB,QALKA,GAAS,GAAM,QACbA,GAAS,EAAK,QACR,IAARA,OAHEA,GAAS,GAAM,KAKH,OAQhBg7B,EAAgBh7B,GAId06B,EAAa,CAHf16B,GAAS,GAAM,IACfA,GAAS,EAAK,IACP,IAARA,IAxNW,IA0NU,QAAU,O,+DCjOpC,MAAMi7B,EAAwC,CACnDjK,cAAc,EACd52B,KAAM,UACN62B,SAAU,iBACVC,YAAa,qBACbH,WAAY,OACZ7zB,gBAAgB,EAChBm0B,qBAAqB,GAGV6J,EAAsD,CACjE,CACElK,cAAc,EACd52B,KAAM,WACN62B,SAAU,iBACVF,WAAY,OACZ7zB,gBAAgB,EAChBi0B,YAAa,GAEf,CACEH,cAAc,EACd52B,KAAM,cACN62B,SAAU,oBACVF,WAAY,eACZ7zB,gBAAgB,EAChBi0B,YAAa,GAEf,CACEH,cAAc,EACd52B,KAAM,SACN62B,SAAU,eACVF,WAAY,QACZ7zB,gBAAgB,EAChBi0B,YAAa,GAEf,CACEH,cAAc,EACd52B,KAAM,WACN62B,SAAU,iBACVF,WAAY,UACZ7zB,gBAAgB,EAChBi0B,YAAa,GAEf,CACEH,cAAc,EACd52B,KAAM,OACN62B,SAAU,aACVF,WAAY,OACZ7zB,gBAAgB,EAChBi0B,YAAa,IAIJgK,EAAsD,CACjE,CACEnK,cAAc,EACd52B,KAAM,eACN62B,SAAU,cACVF,WAAY,OACZ7zB,gBAAgB,EAChBi0B,YAAa,GAEf,CACEH,cAAc,EACd52B,KAAM,cACN62B,SAAU,aACVF,WAAY,YACZ7zB,gBAAgB,EAChBi0B,YAAa,GAEf,CACEH,cAAc,EACd52B,KAAM,kBACN62B,SAAU,iBACVF,WAAY,UACZ7zB,gBAAgB,EAChBi0B,YAAa,IAIJiK,EAAiD,CAC5DpK,cAAc,EACd52B,KAAM,SACN62B,SAAU,yBACVF,WAAY,gBACZI,YAAa,E,kBCvFA,SAAS4G,EAAqBjS,EAAsB1c,GACjE,IAAIiyB,EAAY,EACZC,EAAa,EAEbrkC,EAA8B6uB,EAElC,KAAO7uB,GAAWA,IAAYmS,IAAcnS,EAAQskC,SAASnyB,IAC3DiyB,GAAapkC,EAAQokC,UACrBC,GAAcrkC,EAAQqkC,WAEtBrkC,EAAUA,EAAQukC,aAGpB,MAAO,CAAE7jC,IAAK0jC,EAAW7jC,KAAM8jC,EACjC,C,mDCbA,SAAgB,UAAY,WAAW,OAAS,WAAW,oBAAsB,WAAW,SAAW,WAAW,WAAa,WAAW,OAAS,WAAW,UAAY,WAAW,aAAe,W,mCCApM,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,W,mCCAnJ,SAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,WAAW,YAAc,W","sources":["webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessageUpdatedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/schedulers/useInterval.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageUpdatedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleViewUpdatedAvatar = () => {\n    openMediaViewer({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: MAIN_THREAD_ID,\n      origin: MediaViewerOrigin.SuggestedAvatar,\n    });\n  };\n\n  return (\n    <>\n      <span>{renderContent()}</span>\n      <span\n        className=\"action-message-updated-avatar\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleViewUpdatedAvatar}\n        aria-label={lang('ViewPhotoAction')}\n      >\n        <Avatar\n          photo={message.content.action!.photo}\n          loopIndefinitely\n          withVideo\n          size=\"jumbo\"\n        />\n      </span>\n    </>\n  );\n};\n\nexport default memo(ActionMessageUpdatedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\nconst AUTO_EXPAND_TIME = 10; // Seconds from joining\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  isExpanded?: boolean;\n  count?: number;\n  isCurrentUserPremium: boolean;\n  channelJoinInfo?: ApiChatFullInfo['joinInfo'];\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  isExpanded,\n  count,\n  isCurrentUserPremium,\n  channelJoinInfo,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shouldRenderSkeleton, setShouldRenderSkeleton] = useState(false);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shouldRenderSkeleton\n      && (isExpanded || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useHorizontalScroll(ref, !shouldRenderChannels, true);\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShouldRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shouldRenderSkeleton && similarChannels && isExpanded) {\n      const id = setTimeout(() => {\n        setShouldRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, isExpanded, shouldRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (isExpanded) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n      setShouldRenderSkeleton(!similarChannelIds);\n    }\n  });\n\n  useEffect(() => {\n    if (!channelJoinInfo?.joinedDate || isExpanded) return;\n    if (getServerTime() - channelJoinInfo.joinedDate <= AUTO_EXPAND_TIME) {\n      handleToggle();\n    }\n  }, [channelJoinInfo, isExpanded]);\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shouldRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count! - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <Icon name=\"user-filled\" className={styles.icon} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, isExpanded, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      similarChannelIds,\n      isExpanded,\n      count,\n      isCurrentUserPremium,\n      channelJoinInfo: chatFullInfo?.joinInfo,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageActionStarGift, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, getPeerTitle, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsCurrentUserPremium,\n  selectIsMessageFocused,\n  selectPeer,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../common/helpers/gifts';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useMessageResizeObserver from '../../hooks/useResizeMessageObserver';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../common/profile/RadialPatternBackground';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ActionMessageUpdatedAvatar from './ActionMessageUpdatedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport Reactions from './message/reactions/Reactions';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n  currentUserId?: string;\n  isCurrentUserPremium?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  threadId,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n  currentUserId,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isUpdatedAvatar = message.content.action?.type === 'updateProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions);\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return;\n\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n    const { fromId, peerId } = starGift;\n\n    const fromPeer = fromId ? selectPeer(getGlobal(), fromId) : undefined;\n    const targetPeer = peerId\n      ? selectPeer(getGlobal(), peerId)\n      : starGift.type === 'starGiftUnique' && !message.isOutgoing\n        ? targetChat : undefined;\n\n    if (targetPeer && targetPeer.id !== currentUserId) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          {starGift.type === 'starGift' && (\n            <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetPeer} />\n          )}\n          <span> {getPeerTitle(lang, targetPeer)} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        {starGift.type === 'starGift' && (\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={fromPeer || senderUser} />\n        )}\n        <span> {getPeerTitle(lang, fromPeer || senderUser!)} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    const targetChatTitle = targetChat && getPeerTitle(lang, targetChat);\n    const starGiftMessage = starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amountToConvert = starGift?.starsToConvert;\n\n    if (starGift.isSaved) {\n      return lang(starGift.savedId ? 'ActionStarGiftChannelDisplaying' : 'ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isUpgraded) {\n      return lang('ActionStarGiftUpgraded');\n    }\n\n    if (message.isOutgoing) {\n      if (amountToConvert) {\n        return lang('ActionStarGiftPeerOutDescription', {\n          peer: targetChatTitle || 'Someone',\n          count: amountToConvert,\n        }, { withNodes: true, pluralValue: amountToConvert });\n      }\n\n      if (starGift.canUpgrade) {\n        return lang('ActionStarGiftPeerOutDescriptionUpgrade', {\n          peer: targetChatTitle || 'Someone',\n        });\n      }\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoPeerDescriptionOutConverted', {\n          amount: formatInteger(amountToConvert!),\n          peer: targetChatTitle || 'Chat',\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amountToConvert!),\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    if (amountToConvert) {\n      return lang('ActionStarGiftDescription2', {\n        count: amountToConvert,\n      }, { withNodes: true, pluralValue: amountToConvert });\n    }\n\n    if (starGift.canUpgrade) {\n      return lang('ActionStarGiftDescriptionUpgrade');\n    }\n\n    return undefined;\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    if (!starGift || starGift.gift.type !== 'starGift') return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGift.gift.sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {starGift.alreadyPaidUpgradeStars && (!message.isOutgoing || targetUsers?.[0]?.isSelf)\n            ? lang('ActionStarGiftUnpack') : oldLang('ActionGiftPremiumView')}\n        </div>\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift || starGift.gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(starGift.gift)!;\n    const attributes = getGiftAttributes(starGift.gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    const adaptedPatternColor = `${backdrop.patternColor.slice(0, 7)}55`;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered action-message-unique\"\n        tabIndex={0}\n        role=\"button\"\n        style={`--pattern-color: ${adaptedPatternColor}`}\n        onClick={handleStarGiftClick}\n      >\n        <div className=\"action-message-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"action-message-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n            clearBottomSector\n          />\n        </div>\n        <AnimatedIconFromSticker\n          sticker={sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-unique-title\" style={`color: ${backdrop.textColor}`}>\n          {starGift.gift.title} #{starGift.gift.number}\n        </div>\n        <div className=\"action-message-unique-properties\" style={`color: ${backdrop.textColor}`}>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeModel')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {model.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeBackdrop')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {backdrop.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeSymbol')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {pattern.name}\n          </div>\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('Gift2UniqueView')}\n        </div>\n        <GiftRibbon\n          color={adaptedPatternColor}\n          text={oldLang('ActionStarGift')}\n        />\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits2', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n              pluralValue: message.content.action?.stars!,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar || isUpdatedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && !isUpdatedAvatar && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isStarGiftUnique && renderStarGiftUnique()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isUpdatedAvatar && (\n        <ActionMessageUpdatedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message!}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      currentUserId: global.currentUserId,\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback(), delay);\n    if (!noFirst) savedCallback();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["memo","AvatarList","peers","size","className","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","useMemo","length","React","createElement","buildClassName","style","dir","isRtl","slice","map","peer","Avatar","MediaSpoiler","isVisible","withAnimation","thumbDataUri","width","height","ref","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","undefined","canvasRef","useCanvasBlur","handleClick","useLastCallback","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useEffect","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","Boolean","isProgressFull","buildStyle","viewBox","fill","d","styles","COLORS","red","blue","COLOR_KEYS","Set","Object","keys","theme","selectTheme","GiftRibbon","text","color","validSvgRandomId","useUniqueId","colorKey","has","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","getStickerFromGift","gift","sticker","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","getGlobal","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","setTimeout","requestMeasure","clearTimeout","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","i","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","useMedia","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","generateRandomDropPath","path","CustomEmoji","withSharedAnimation","onAnimationEnd","src","alt","draggable","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ActionMessageSuggestedAvatar","message","renderContent","openMediaViewer","uploadProfilePhoto","showNotification","isOutgoing","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","content","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","isVideo","showAvatarNotification","payload","screen","SettingsScreens","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","async","blob","fetchBlob","File","videoTs","videoSizes","l","videoStartTs","chatId","messageId","threadId","MAIN_THREAD_ID","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","onClose","ConfirmDialog","isOpen","confirmHandler","textParts","ActionMessageUpdatedAvatar","handleViewUpdatedAvatar","SimilarChannel","channel","openChat","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","ApiMediaFormat","BlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","formatIntegerCompact","membersCount","MoreChannels","channelsCount","isCurrentUserPremium","openPremiumModal","openChatWithInfo","shouldReplaceHistory","profileTab","forceScrollProfileTab","similarChannelIds","isExpanded","count","selectSimilarChannelIds","selectIsCurrentUserPremium","chatFullInfo","selectChatFullInfo","channelJoinInfo","joinInfo","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shouldRenderSkeleton","setShouldRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","shouldRenderChannels","useHorizontalScroll","handleToggle","joinedDate","getServerTime","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","senderId","targetUserIds","targetChatId","targetMessageId","getMessageReplyInfo","replyToMsgId","targetMessage","selectChatMessage","settings","themes","isFocused","selectIsMessageFocused","direction","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starsGiftSticker","selectGiftStickerForStars","topic","selectTopicFromMessage","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","ActionMessage","isEmbedded","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","observeIntersectionForLoading","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","oldLang","useLang","useOnIntersect","useEnsureMessage","replyInfo","useFocusMessage","elementRef","useUnmountCleanup","isPinned","viewportPinnedIdsToRemove","noAppearanceAnimation","isShown","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isUpdatedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isStarGiftUnique","isPrizeStars","withServiceReactions","areReactionsPossible","useMessageResizeObserver","shouldShowConfettiRef","isUnread","withStars","usersById","users","byId","targetUsers","userId","renderActionMessageText","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isContextMenuShown","handleStarGiftClick","starGift","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","renderStarGiftUserCaption","fromId","fromPeer","targetPeer","getMessageHtmlId","onMouseDown","preventMessageInputBlur","onContextMenu","giftMessage","AnimatedIconFromSticker","nonInteractive","renderTextWithEntities","entities","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderText","getChatTitle","renderGiftCode","formatInteger","targetChatTitle","starGiftMessage","amountToConvert","starsToConvert","isSaved","savedId","isUpgraded","withNodes","pluralValue","canUpgrade","isConverted","amount","withMarkdown","renderStarGiftUserDescription","alreadyPaidUpgradeStars","renderStarGift","centerColor","edgeColor","adaptedPatternColor","textColor","number","renderStarGiftUnique","renderPrizeStars","ContextMenuContainer","anchor","messageListType","onCloseAnimationEnd","Reactions","isOutside","props","useModuleLoader","Bundles","Extra","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","closest","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","quality","REACTION_SIZE","selectStarsState","ReactionButton","isOwnMessage","recentReactors","chosenClassName","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","button","balance","originReaction","startX","startY","offsetHeight","currentScale","Number","getComputedStyle","scale","cancel","animate","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","isReactionChosen","chosen","animatedEmoji","AnimatedCounter","paidCounter","counter","maxWidth","metaChildren","noRecentReactors","tags","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","results","areTags","recentReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","cacheBreaker","toString","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","isDisabled","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","getTriggerElement","getRootElement","document","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","MenuItem","destructive","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","callback","delay","noFirst","savedCallback","setInterval","clearInterval","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useRunDebounced","ms","noLast","deps","useDebouncedCallback","cb","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","iterations","isNaN","imageData","getImageData","pixels","data","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","selectCanAnimateInterface","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","dataset","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","remainingPath","absPath","transition","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","startAt","prevOnHeavyAnimationEnd","animateSingle","t","currentPath","newScrollTop","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","p0","rgb2hsb","h","s","v","hsb2rgb","f","q","url","defaultRGB","rgb","image","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","offsetTop","offsetLeft","contains","offsetParent"],"sourceRoot":""}